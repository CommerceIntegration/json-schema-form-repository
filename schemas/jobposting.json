{
  "description": "A listing that describes a job opening in a certain organization.",
  "title": "JobPosting",
  "version": "2.2",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "educationRequirements": {
      "type": "string",
      "description": "Educational background needed for the position."
    },
    "sameAs": {
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "$ref": "file://url.json#properties"
    },
    "image": {
      "anyOf": [
        {
          "$ref": "file://imageobject.json#properties"
        },
        {
          "$ref": "file://url.json#properties"
        }
      ],
      "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
    },
    "datePosted": {
      "type": "string",
      "description": "Publication date for the job posting."
    },
    "additionalType": {
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "$ref": "file://url.json#properties"
    },
    "hiringOrganization": {
      "description": "Organization offering the job position.",
      "$ref": "file://organization.json#properties"
    },
    "salaryCurrency": {
      "type": "string",
      "description": "The currency (coded using ISO 4217, http://en.wikipedia.org/wiki/ISO_4217 ) used for the main salary information in this job posting or for this employee."
    },
    "title": {
      "type": "string",
      "description": "The title of the job."
    },
    "employmentType": {
      "type": "string",
      "description": "Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship)."
    },
    "responsibilities": {
      "type": "string",
      "description": "Responsibilities associated with this role."
    },
    "mainEntityOfPage": {
      "anyOf": [
        {
          "$ref": "file://url.json#properties"
        },
        {
          "$ref": "file://creativework.json#properties"
        }
      ],
      "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
    },
    "jobBenefits": {
      "type": "string",
      "description": "Description of benefits associated with the job."
    },
    "incentiveCompensation": {
      "type": "string",
      "description": "Description of bonus and commission compensation aspects of the job."
    },
    "specialCommitments": {
      "type": "string",
      "description": "Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc."
    },
    "description": {
      "type": "string",
      "description": "A short description of the item."
    },
    "incentives": {
      "type": "string",
      "description": "Description of bonus and commission compensation aspects of the job."
    },
    "occupationalCategory": {
      "type": "string",
      "description": "Category or categories describing the job. Use BLS O*NET-SOC taxonomy: http://www.onetcenter.org/taxonomy.html. Ideally includes textual label and formal code, with the property repeated for each applicable value."
    },
    "qualifications": {
      "type": "string",
      "description": "Specific qualifications required for this role."
    },
    "alternateName": {
      "type": "string",
      "description": "An alias for the item."
    },
    "baseSalary": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "file://pricespecification.json#properties"
        }
      ],
      "description": "The base salary of the job or of an employee in an EmployeeRole."
    },
    "workHours": {
      "type": "string",
      "description": "The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm)."
    },
    "experienceRequirements": {
      "type": "string",
      "description": "Description of skills and experience needed for the position."
    },
    "potentialAction": {
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "$ref": "file://action.json#properties"
    },
    "benefits": {
      "type": "string",
      "description": "Description of benefits associated with the job."
    },
    "name": {
      "type": "string",
      "description": "The name of the item."
    },
    "skills": {
      "type": "string",
      "description": "Skills required to fulfill this role."
    },
    "industry": {
      "type": "string",
      "description": "The industry associated with the job position."
    },
    "url": {
      "description": "URL of the item.",
      "$ref": "file://url.json#properties"
    },
    "jobLocation": {
      "description": "A (typically single) geographic location associated with the job position.",
      "$ref": "file://place.json#properties"
    }
  }
}