{
  "description": "A statement of the money due for goods or services; a bill.",
  "title": "Invoice",
  "version": "2.2",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "sameAs": {
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "$ref": "file://url.json#properties"
    },
    "image": {
      "anyOf": [
        {
          "$ref": "file://imageobject.json#properties"
        },
        {
          "$ref": "file://url.json#properties"
        }
      ],
      "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
    },
    "additionalType": {
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "$ref": "file://url.json#properties"
    },
    "alternateName": {
      "type": "string",
      "description": "An alias for the item."
    },
    "accountId": {
      "type": "string",
      "description": "The identifier for the account the payment will be applied to."
    },
    "category": {
      "anyOf": [
        {
          "$ref": "file://physicalactivitycategory.json#properties"
        },
        {
          "$ref": "file://thing.json#properties"
        },
        {
          "type": "string"
        }
      ],
      "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy."
    },
    "minimumPaymentDue": {
      "description": "The minimum payment required at this time.",
      "$ref": "file://pricespecification.json#properties"
    },
    "paymentMethodId": {
      "type": "string",
      "description": "An identifier for the method of payment used (e.g. the last 4 digits of the credit card)."
    },
    "paymentDue": {
      "type": "string",
      "description": "The date that payment is due."
    },
    "provider": {
      "anyOf": [
        {
          "$ref": "file://person.json#properties"
        },
        {
          "$ref": "file://organization.json#properties"
        }
      ],
      "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller."
    },
    "mainEntityOfPage": {
      "anyOf": [
        {
          "$ref": "file://url.json#properties"
        },
        {
          "$ref": "file://creativework.json#properties"
        }
      ],
      "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
    },
    "paymentMethod": {
      "description": "The name of the credit card or other method of payment for the order.",
      "$ref": "file://paymentmethod.json#properties"
    },
    "totalPaymentDue": {
      "description": "The total amount due.",
      "$ref": "file://pricespecification.json#properties"
    },
    "description": {
      "type": "string",
      "description": "A short description of the item."
    },
    "broker": {
      "anyOf": [
        {
          "$ref": "file://person.json#properties"
        },
        {
          "$ref": "file://organization.json#properties"
        }
      ],
      "description": "An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred."
    },
    "paymentDueDate": {
      "type": "string",
      "description": "The date that payment is due."
    },
    "confirmationNumber": {
      "type": "string",
      "description": "A number that confirms the given order or payment has been received."
    },
    "customer": {
      "anyOf": [
        {
          "$ref": "file://organization.json#properties"
        },
        {
          "$ref": "file://person.json#properties"
        }
      ],
      "description": "Party placing the order or paying the invoice."
    },
    "potentialAction": {
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "$ref": "file://action.json#properties"
    },
    "name": {
      "type": "string",
      "description": "The name of the item."
    },
    "url": {
      "description": "URL of the item.",
      "$ref": "file://url.json#properties"
    },
    "paymentStatus": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "file://paymentstatustype.json#properties"
        }
      ],
      "description": "The status of payment; whether the invoice has been paid or not."
    },
    "billingPeriod": {
      "description": "The time interval used to compute the invoice.",
      "$ref": "file://duration.json#properties"
    },
    "referencesOrder": {
      "description": "The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.",
      "$ref": "file://order.json#properties"
    },
    "scheduledPaymentDate": {
      "type": "string",
      "description": "The date the invoice is scheduled to be paid."
    }
  }
}