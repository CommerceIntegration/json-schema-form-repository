{
  "version": "2.2",
  "description": "A person (alive, dead, undead, or fictional).",
  "title": "Person",
  "properties": {
    "awards": {
      "description": "Awards won by or for this item.",
      "type": "string"
    },
    "jobTitle": {
      "description": "The job title of the person (for example, Financial Manager).",
      "type": "string"
    },
    "duns": {
      "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
      "type": "string"
    },
    "deathDate": {
      "description": "Date of death.",
      "type": "string"
    },
    "spouse": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "makesOffer": {
      "version": "2.2",
      "description": "An offer to transfer some rights to an item or to provide a service&#x2014;for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.\n      <br/><br/>\n      For <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GTIN</a>-related fields, see\n      <a href=\"http://www.gs1.org/barcodes/support/check_digit_calculator\">Check Digit calculator</a>\n      and <a href=\"http://www.gs1us.org/resources/standards/gtin-validation-guide\">validation guide</a>\n      from <a href=\"http://www.gs1.org/\">GS1</a>.",
      "title": "Offer",
      "properties": {
        "validThrough": {
          "description": "The end of the validity of offer, price specification, or opening hours data.",
          "type": "string"
        },
        "deliveryLeadTime": {
          "description": "The typical delay between the receipt of the order and the goods leaving the warehouse.",
          "$ref": "file://quantitativevalue.json"
        },
        "gtin12": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-12.aspx\">GTIN-12</a> code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "gtin8": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "eligibleDuration": {
          "description": "The duration for which the given offer is valid.",
          "$ref": "file://quantitativevalue.json"
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "mpn": {
          "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
          "type": "string"
        },
        "advanceBookingRequirement": {
          "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
          "$ref": "file://quantitativevalue.json"
        },
        "businessFunction": {
          "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
          "$ref": "file://businessfunction.json"
        },
        "availabilityEnds": {
          "description": "The end of the availability of the product or service included in the offer.",
          "type": "string"
        },
        "gtin13": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx\">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "validFrom": {
          "description": "The date when the item becomes valid.",
          "type": "string"
        },
        "eligibleRegion": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\n      <br><br> See also <a href=\"/ineligibleRegion\">ineligibleRegion</a>.\n    "
        },
        "ineligibleRegion": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\n      <br><br> See also <a href=\"/eligibleRegion\">eligibleRegion</a>.\n      "
        },
        "itemOffered": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://service.json"
            }
          ],
          "description": "The item being offered."
        },
        "eligibleTransactionVolume": {
          "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
          "$ref": "file://pricespecification.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "areaServed": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "itemCondition": {
          "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
          "$ref": "file://offeritemcondition.json"
        },
        "sku": {
          "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
          "type": "string"
        },
        "warranty": {
          "description": "The warranty promise(s) included in the offer.",
          "$ref": "file://warrantypromise.json"
        },
        "serialNumber": {
          "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
          "type": "string"
        },
        "eligibleCustomerType": {
          "description": "The type(s) of customers for which the given offer is valid.",
          "$ref": "file://businessentitytype.json"
        },
        "inventoryLevel": {
          "description": "The current approximate inventory level for the item or items.",
          "$ref": "file://quantitativevalue.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "addOn": {
          "description": "An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).",
          "$ref": "file://offer.json"
        },
        "availabilityStarts": {
          "description": "The beginning of the availability of the product or service included in the offer.",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "availableAtOrFrom": {
          "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
          "$ref": "file://place.json"
        },
        "seller": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider."
        },
        "priceCurrency": {
          "description": "The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to PriceSpecification and its subtypes.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "gtin14": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx\">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "priceValidUntil": {
          "description": "The date after which the price is no longer available.",
          "type": "string"
        },
        "category": {
          "oneOf": [
            {
              "$ref": "file://physicalactivitycategory.json"
            },
            {
              "$ref": "file://thing.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy."
        },
        "acceptedPaymentMethod": {
          "description": "The payment method(s) accepted by seller for this offer.",
          "$ref": "file://paymentmethod.json"
        },
        "includesObject": {
          "description": "This links to a node or nodes indicating the exact quantity of the products included in the offer.",
          "$ref": "file://typeandquantitynode.json"
        },
        "offeredBy": {
          "oneOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "A pointer to the organization or person making the offer."
        },
        "price": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\n<br />\n<br />\n      Usage guidelines:\n<br />\n<ul>\n<li>Use the <a href=\"/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n      including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.\n</li>\n<li>\n      Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\n</li>\n<li>\n      Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values\n      alongside more human-friendly formatting.\n</li>\n<li>\n      Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\n</li>\n</ul>\n      "
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "eligibleQuantity": {
          "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
          "$ref": "file://quantitativevalue.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "priceSpecification": {
          "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
          "$ref": "file://pricespecification.json"
        },
        "availability": {
          "description": "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.",
          "$ref": "file://itemavailability.json"
        },
        "availableDeliveryMethod": {
          "description": "The delivery method(s) available for this offer.",
          "$ref": "file://deliverymethod.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "colleague": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "mainEntityOfPage": {
      "oneOf": [
        {
          "version": "2.2",
          "description": "The most generic kind of creative work, including books, movies, photographs, software programs, etc.",
          "title": "CreativeWork",
          "properties": {
            "dateModified": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed."
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "encodings": {
              "description": "A media object that encodes this CreativeWork.",
              "$ref": "file://mediaobject.json"
            },
            "character": {
              "description": "Fictional person connected with a creative work.",
              "$ref": "file://person.json"
            },
            "mainEntity": {
              "description": "Indicates the primary entity described in some page or other CreativeWork.",
              "$ref": "file://thing.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "audio": {
              "description": "An embedded audio object.",
              "$ref": "file://audioobject.json"
            },
            "workExample": {
              "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.",
              "$ref": "file://creativework.json"
            },
            "dateCreated": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The date on which the CreativeWork was created or the item was added to a DataFeed."
            },
            "translator": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "An agent responsible for rendering a translated work from a source work"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "encoding": {
              "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.",
              "$ref": "file://mediaobject.json"
            },
            "recordedAt": {
              "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.",
              "$ref": "file://event.json"
            },
            "isPartOf": {
              "description": "Indicates a CreativeWork that this CreativeWork is (in some sense) part of.",
              "$ref": "file://creativework.json"
            },
            "citation": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc."
            },
            "publisher": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The publisher of the creative work."
            },
            "version": {
              "description": "The version of the CreativeWork embodied by a specified resource.",
              "type": "number"
            },
            "keywords": {
              "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
              "type": "string"
            },
            "fileFormat": {
              "description": "Media type (aka MIME format, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information.",
              "type": "string"
            },
            "thumbnailUrl": {
              "description": "A thumbnail image relevant to the Thing.",
              "type": "string"
            },
            "producer": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.)."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "associatedMedia": {
              "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
              "$ref": "file://mediaobject.json"
            },
            "accessibilityHazard": {
              "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "text": {
              "description": "The textual content of this CreativeWork.",
              "type": "string"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "releasedEvent": {
              "description": "The place and time the release was issued, expressed as a PublicationEvent.",
              "$ref": "file://publicationevent.json"
            },
            "commentCount": {
              "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
              "type": "number"
            },
            "copyrightHolder": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The party holding the legal copyright to the CreativeWork."
            },
            "timeRequired": {
              "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
              "$ref": "file://duration.json"
            },
            "inLanguage": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://language.json"
                }
              ],
              "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href='http://tools.ietf.org/html/bcp47'>IETF BCP 47 standard</a>."
            },
            "alternativeHeadline": {
              "description": "A secondary title of the CreativeWork.",
              "type": "string"
            },
            "schemaVersion": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using a URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application. "
            },
            "educationalAlignment": {
              "description": "An alignment to an established educational framework.",
              "$ref": "file://alignmentobject.json"
            },
            "publishingPrinciples": {
              "description": "Link to page describing the editorial principles of the organization primarily responsible for the creation of the CreativeWork.",
              "type": "string"
            },
            "contentRating": {
              "description": "Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.",
              "type": "string"
            },
            "discussionUrl": {
              "description": "A link to the page containing the comments of the CreativeWork.",
              "type": "string"
            },
            "locationCreated": {
              "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
              "$ref": "file://place.json"
            },
            "learningResourceType": {
              "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
              "type": "string"
            },
            "isFamilyFriendly": {
              "description": "Indicates whether this content is family friendly.",
              "type": "boolean"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "genre": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Genre of the creative work or group."
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "exampleOfWork": {
              "description": "A creative work that this work is an example/instance/realization/derivation of.",
              "$ref": "file://creativework.json"
            },
            "workTranslation": {
              "description": "A work that is a translation of the content of this work. e.g. \u897f\u904a\u8a18 has an English workTranslation \u201cJourney to the West\u201d,a German workTranslation \u201cMonkeys Pilgerfahrt\u201d and a Vietnamese  translation T\u00e2y du k\u00fd b\u00ecnh kh\u1ea3o.",
              "$ref": "file://creativework.json"
            },
            "accessibilityControl": {
              "description": "Identifies input methods that are sufficient to fully control the described resource (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "audience": {
              "description": "An intended audience, i.e. a group for whom something was created.",
              "$ref": "file://audience.json"
            },
            "accessibilityAPI": {
              "description": "Indicates that the resource is compatible with the referenced accessibility API (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "provider": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller."
            },
            "interactivityType": {
              "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
              "type": "string"
            },
            "license": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A license document that applies to this content, typically indicated by URL."
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "contentLocation": {
              "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
              "$ref": "file://place.json"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "offers": {
              "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
              "$ref": "file://offer.json"
            },
            "hasPart": {
              "description": "Indicates a CreativeWork that is (in some sense) a part of this CreativeWork.",
              "$ref": "file://creativework.json"
            },
            "isBasedOnUrl": {
              "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "video": {
              "description": "An embedded video object.",
              "$ref": "file://videoobject.json"
            },
            "sourceOrganization": {
              "description": "The Organization on whose behalf the creator was working.",
              "$ref": "file://organization.json"
            },
            "editor": {
              "description": "Specifies the Person who edited the CreativeWork.",
              "$ref": "file://person.json"
            },
            "accountablePerson": {
              "description": "Specifies the Person that is legally accountable for the CreativeWork.",
              "$ref": "file://person.json"
            },
            "accessibilityFeature": {
              "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "headline": {
              "description": "Headline of the article.",
              "type": "string"
            },
            "contributor": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A secondary contributor to the CreativeWork."
            },
            "author": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The author of this content. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably."
            },
            "translationOfWork": {
              "description": "The work that this work has been translated from. e.g. \u7269\u79cd\u8d77\u6e90 is a translationOf \u201cOn the Origin of Species\u201d",
              "$ref": "file://creativework.json"
            },
            "creator": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork."
            },
            "mentions": {
              "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
              "$ref": "file://thing.json"
            },
            "about": {
              "description": "The subject matter of the content.",
              "$ref": "file://thing.json"
            },
            "publication": {
              "description": "A publication event associated with the item.",
              "$ref": "file://publicationevent.json"
            },
            "typicalAgeRange": {
              "description": "The typical expected age range, e.g. '7-9', '11-'.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "datePublished": {
              "description": "Date of first broadcast/publication.",
              "type": "string"
            },
            "educationalUse": {
              "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "copyrightYear": {
              "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
              "type": "number"
            },
            "comment": {
              "description": "Comments, typically from users.",
              "$ref": "file://comment.json"
            },
            "publisherImprint": {
              "description": "The publishing division which published the comic.",
              "$ref": "file://organization.json"
            },
            "interactionStatistic": {
              "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.",
              "$ref": "file://interactioncounter.json"
            },
            "position": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "The position of an item in a series or sequence of items."
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "type": "string"
        }
      ],
      "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
    },
    "knows": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "sibling": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "follows": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "nationality": {
      "version": "2.2",
      "description": "A country.",
      "title": "Country",
      "properties": {
        "hasMap": {
          "oneOf": [
            {
              "$ref": "file://map.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A URL to a map of the place."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "branchCode": {
          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "containedInPlace": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "containedIn": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "geo": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://geocoordinates.json"
            }
          ],
          "description": "The geo coordinates of the place."
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "photo": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "$ref": "file://photograph.json"
            }
          ],
          "description": "A photograph of this place."
        },
        "photos": {
          "oneOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "Photographs of this place."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "logo": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "maps": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "containsPlace": {
          "description": "The basic containment relation between a place and another that it contains.",
          "$ref": "file://place.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "openingHoursSpecification": {
          "description": "The opening hours of a certain place.",
          "$ref": "file://openinghoursspecification.json"
        },
        "map": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "performerIn": {
      "version": "2.2",
      "description": "An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the 'offers' property. Repeated events may be structured as separate Event objects.",
      "title": "Event",
      "properties": {
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "eventStatus": {
          "description": "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.",
          "$ref": "file://eventstatustype.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "performer": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A performer at the event&#x2014;for example, a presenter, musician, musical group or actor."
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "typicalAgeRange": {
          "description": "The typical expected age range, e.g. '7-9', '11-'.",
          "type": "string"
        },
        "duration": {
          "description": "The duration of the item (movie, audio recording, event, etc.) in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>.",
          "$ref": "file://duration.json"
        },
        "workPerformed": {
          "description": "A work performed in some event, for example a play performed in a TheaterEvent.",
          "$ref": "file://creativework.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "offers": {
          "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
          "$ref": "file://offer.json"
        },
        "attendees": {
          "oneOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "A person attending the event."
        },
        "doorTime": {
          "description": "The time admission will commence.",
          "type": "string"
        },
        "performers": {
          "oneOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor."
        },
        "organizer": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "An organizer of an Event."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "previousStartDate": {
          "description": "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.",
          "type": "string"
        },
        "subEvents": {
          "description": "Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.",
          "$ref": "file://event.json"
        },
        "endDate": {
          "description": "The end date and time of the item (in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>).",
          "type": "string"
        },
        "attendee": {
          "oneOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "A person or organization attending the event."
        },
        "startDate": {
          "description": "The start date and time of the item (in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>).",
          "type": "string"
        },
        "workFeatured": {
          "description": "A work featured in some event, e.g. exhibited in an ExhibitionEvent.\n       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).",
          "$ref": "file://creativework.json"
        },
        "inLanguage": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://language.json"
            }
          ],
          "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href='http://tools.ietf.org/html/bcp47'>IETF BCP 47 standard</a>."
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "subEvent": {
          "description": "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.",
          "$ref": "file://event.json"
        },
        "recordedIn": {
          "description": "The CreativeWork that captured all or part of this Event.",
          "$ref": "file://creativework.json"
        },
        "location": {
          "oneOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
        },
        "superEvent": {
          "description": "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.",
          "$ref": "file://event.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "deathPlace": {
      "version": "2.2",
      "description": "Entities that have a somewhat fixed, physical extension.",
      "title": "Place",
      "properties": {
        "hasMap": {
          "oneOf": [
            {
              "$ref": "file://map.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A URL to a map of the place."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "branchCode": {
          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "containedInPlace": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "containedIn": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "geo": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://geocoordinates.json"
            }
          ],
          "description": "The geo coordinates of the place."
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "photo": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "$ref": "file://photograph.json"
            }
          ],
          "description": "A photograph of this place."
        },
        "photos": {
          "oneOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "Photographs of this place."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "logo": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "maps": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "containsPlace": {
          "description": "The basic containment relation between a place and another that it contains.",
          "$ref": "file://place.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "openingHoursSpecification": {
          "description": "The opening hours of a certain place.",
          "$ref": "file://openinghoursspecification.json"
        },
        "map": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "brand": {
      "oneOf": [
        {
          "version": "2.2",
          "description": "An organization such as a school, NGO, corporation, club, etc.",
          "title": "Organization",
          "properties": {
            "member": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "serviceArea": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "brand": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "department": {
              "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
              "$ref": "file://organization.json"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "address": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://postaladdress.json"
                }
              ],
              "description": "Physical address of the item."
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "subOrganization": {
              "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
              "$ref": "file://organization.json"
            },
            "makesOffer": {
              "description": "A pointer to products or services offered by the organization or person.",
              "$ref": "file://offer.json"
            },
            "hasPOS": {
              "description": "Points-of-Sales operated by the organization or person.",
              "$ref": "file://place.json"
            },
            "duns": {
              "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "logo": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "owns": {
              "oneOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "$ref": "file://ownershipinfo.json"
                }
              ],
              "description": "Products owned by the organization or person."
            },
            "seeks": {
              "description": "A pointer to products or services sought by the organization or person (demand).",
              "$ref": "file://demand.json"
            },
            "areaServed": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "employee": {
              "description": "Someone working for this organization.",
              "$ref": "file://person.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "location": {
              "oneOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "founder": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "foundingDate": {
              "description": "The date that this organization was founded.",
              "type": "string"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "alumni": {
              "description": "Alumni of an organization.",
              "$ref": "file://person.json"
            },
            "naics": {
              "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "contactPoints": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "memberOf": {
              "oneOf": [
                {
                  "$ref": "file://programmembership.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
            },
            "founders": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "contactPoint": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "employees": {
              "description": "People working for this organization.",
              "$ref": "file://person.json"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "foundingLocation": {
              "description": "The place where the Organization was founded.",
              "$ref": "file://place.json"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "vatID": {
              "description": "The Value-added Tax ID of the organization or person.",
              "type": "string"
            },
            "dissolutionDate": {
              "description": "The date that this organization was dissolved.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "taxID": {
              "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
              "type": "string"
            },
            "legalName": {
              "description": "The official name of the organization, e.g. the registered company name.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "hasOfferCatalog": {
              "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "file://listitem.json"
                  },
                  {
                    "$ref": "file://thing.json"
                  }
                ]
              }
            },
            "members": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "parentOrganization": {
              "description": "The larger organization that this organization is a branch of, if any.",
              "$ref": "file://organization.json"
            },
            "numberOfEmployees": {
              "description": "The number of employees in an organization e.g. business.",
              "$ref": "file://quantitativevalue.json"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "version": "2.2",
          "description": "A brand is a name used by an organization or business person for labeling a product, product group, or similar.",
          "title": "Brand",
          "properties": {
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "logo": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        }
      ],
      "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
    },
    "honorificPrefix": {
      "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
      "type": "string"
    },
    "potentialAction": {
      "version": "2.2",
      "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.\n      <br/><br/>See also <a href=\"http://blog.schema.org/2014/04/announcing-schemaorg-actions.html\">blog post</a>\n      and <a href=\"http://schema.org/docs/actions.html\">Actions overview document</a>.",
      "title": "Action",
      "properties": {
        "error": {
          "description": "For failed actions, more information on the cause of the failure.",
          "$ref": "file://thing.json"
        },
        "participant": {
          "oneOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with *Steve*."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "target": {
          "description": "Indicates a target EntryPoint for an Action.",
          "$ref": "file://entrypoint.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "endTime": {
          "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to *December*.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
          "type": "string"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "object": {
          "description": "The object upon the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read *a book*.",
          "$ref": "file://thing.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "actionStatus": {
          "description": "Indicates the current disposition of the Action.",
          "$ref": "file://actionstatustype.json"
        },
        "agent": {
          "oneOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "The direct performer or driver of the action (animate or inanimate). e.g. *John* wrote a book."
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "location": {
          "oneOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
        },
        "instrument": {
          "description": "The object that helped the agent perform the action. e.g. John wrote a book with *a pen*.",
          "$ref": "file://thing.json"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "result": {
          "description": "The result produced in the action. e.g. John wrote *a book*.",
          "$ref": "file://thing.json"
        },
        "startTime": {
          "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from *January* to December.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "familyName": {
      "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
      "type": "string"
    },
    "award": {
      "description": "An award won by or for this item.",
      "type": "string"
    },
    "owns": {
      "oneOf": [
        {
          "version": "2.2",
          "description": "Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.",
          "title": "Product",
          "properties": {
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "color": {
              "description": "The color of the product.",
              "type": "string"
            },
            "additionalProperty": {
              "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
              "$ref": "file://propertyvalue.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "isRelatedTo": {
              "description": "A pointer to another, somehow related product (or multiple products).",
              "$ref": "file://product.json"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "brand": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "gtin8": {
              "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
              "type": "string"
            },
            "category": {
              "oneOf": [
                {
                  "$ref": "file://physicalactivitycategory.json"
                },
                {
                  "$ref": "file://thing.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy."
            },
            "isConsumableFor": {
              "description": "A pointer to another product (or multiple products) for which this product is a consumable.",
              "$ref": "file://product.json"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "mpn": {
              "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
              "type": "string"
            },
            "gtin12": {
              "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-12.aspx\">GTIN-12</a> code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
              "type": "string"
            },
            "audience": {
              "description": "An intended audience, i.e. a group for whom something was created.",
              "$ref": "file://audience.json"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "width": {
              "oneOf": [
                {
                  "$ref": "file://distance.json"
                },
                {
                  "$ref": "file://quantitativevalue.json"
                }
              ],
              "description": "The width of the item."
            },
            "productID": {
              "description": "The product identifier, such as ISBN. For example: <code>&lt;meta itemprop='productID' content='isbn:123-456-789'/&gt;</code>.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "offers": {
              "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
              "$ref": "file://offer.json"
            },
            "gtin13": {
              "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx\">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "releaseDate": {
              "description": "The release date of a product or product model. This can be used to distinguish the exact variant of a product.",
              "type": "string"
            },
            "isAccessoryOrSparePartFor": {
              "description": "A pointer to another product (or multiple products) for which this product is an accessory or spare part.",
              "$ref": "file://product.json"
            },
            "gtin14": {
              "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx\">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
              "type": "string"
            },
            "height": {
              "oneOf": [
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://distance.json"
                }
              ],
              "description": "The height of the item."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "logo": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "isSimilarTo": {
              "description": "A pointer to another, functionally similar product (or multiple products).",
              "$ref": "file://product.json"
            },
            "productionDate": {
              "description": "The date of production of the item, e.g. vehicle.",
              "type": "string"
            },
            "depth": {
              "oneOf": [
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://distance.json"
                }
              ],
              "description": "The depth of the item."
            },
            "weight": {
              "description": "The weight of the product or person.",
              "$ref": "file://quantitativevalue.json"
            },
            "manufacturer": {
              "description": "The manufacturer of the product.",
              "$ref": "file://organization.json"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "purchaseDate": {
              "description": "The date the item e.g. vehicle was purchased by the current owner.",
              "type": "string"
            },
            "itemCondition": {
              "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
              "$ref": "file://offeritemcondition.json"
            },
            "model": {
              "oneOf": [
                {
                  "$ref": "file://productmodel.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties."
            },
            "sku": {
              "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "version": "2.2",
          "description": "A structured value providing information about when a certain organization or person owned a certain product.",
          "title": "OwnershipInfo",
          "properties": {
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "ownedThrough": {
              "description": "The date and time of giving up ownership on the product.",
              "type": "string"
            },
            "acquiredFrom": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The organization or person from which the product was acquired."
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "typeOfGood": {
              "description": "The product that this structured value is referring to.",
              "$ref": "file://product.json"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "ownedFrom": {
              "description": "The date and time of obtaining the product.",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        }
      ],
      "description": "Products owned by the organization or person."
    },
    "parents": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "weight": {
      "version": "2.2",
      "description": " A point value or interval for product characteristics and other purposes.",
      "title": "QuantitativeValue",
      "properties": {
        "unitText": {
          "description": "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.",
          "type": "string"
        },
        "unitCode": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "description": "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "minValue": {
          "description": "The lower value of some characteristic or property.",
          "type": "number"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "maxValue": {
          "description": "The upper value of some characteristic or property.",
          "type": "number"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "value": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://structuredvalue.json"
            },
            {
              "type": "number"
            }
          ],
          "description": "The value of the quantitative value or property value node. For QuantitativeValue, the recommended type for values is 'Number'. For PropertyValue, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'."
        },
        "valueReference": {
          "oneOf": [
            {
              "$ref": "file://structuredvalue.json"
            },
            {
              "$ref": "file://qualitativevalue.json"
            },
            {
              "$ref": "file://enumeration.json"
            },
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://propertyvalue.json"
            }
          ],
          "description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature."
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "homeLocation": {
      "oneOf": [
        {
          "version": "2.2",
          "description": "A contact point&#x2014;for example, a Customer Complaints department.",
          "title": "ContactPoint",
          "properties": {
            "contactType": {
              "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
              "type": "string"
            },
            "availableLanguage": {
              "description": "A language someone may use with the item.",
              "$ref": "file://language.json"
            },
            "areaServed": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "contactOption": {
              "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
              "$ref": "file://contactpointoption.json"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "productSupported": {
              "oneOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "serviceArea": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "hoursAvailable": {
              "description": "The hours during which this service or contact is available.",
              "$ref": "file://openinghoursspecification.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "version": "2.2",
          "description": "Entities that have a somewhat fixed, physical extension.",
          "title": "Place",
          "properties": {
            "hasMap": {
              "oneOf": [
                {
                  "$ref": "file://map.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A URL to a map of the place."
            },
            "additionalProperty": {
              "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
              "$ref": "file://propertyvalue.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "containedInPlace": {
              "description": "The basic containment relation between a place and one that contains it.",
              "$ref": "file://place.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "containedIn": {
              "description": "The basic containment relation between a place and one that contains it.",
              "$ref": "file://place.json"
            },
            "address": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://postaladdress.json"
                }
              ],
              "description": "Physical address of the item."
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "geo": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://geocoordinates.json"
                }
              ],
              "description": "The geo coordinates of the place."
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "photo": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "$ref": "file://photograph.json"
                }
              ],
              "description": "A photograph of this place."
            },
            "photos": {
              "oneOf": [
                {
                  "$ref": "file://photograph.json"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "Photographs of this place."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "logo": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "maps": {
              "description": "A URL to a map of the place.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "containsPlace": {
              "description": "The basic containment relation between a place and another that it contains.",
              "$ref": "file://place.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "openingHoursSpecification": {
              "description": "The opening hours of a certain place.",
              "$ref": "file://openinghoursspecification.json"
            },
            "map": {
              "description": "A URL to a map of the place.",
              "type": "string"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        }
      ],
      "description": "A contact location for a person's residence."
    },
    "seeks": {
      "version": "2.2",
      "description": "A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.",
      "title": "Demand",
      "properties": {
        "serialNumber": {
          "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
          "type": "string"
        },
        "eligibleCustomerType": {
          "description": "The type(s) of customers for which the given offer is valid.",
          "$ref": "file://businessentitytype.json"
        },
        "deliveryLeadTime": {
          "description": "The typical delay between the receipt of the order and the goods leaving the warehouse.",
          "$ref": "file://quantitativevalue.json"
        },
        "inventoryLevel": {
          "description": "The current approximate inventory level for the item or items.",
          "$ref": "file://quantitativevalue.json"
        },
        "gtin12": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-12.aspx\">GTIN-12</a> code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "advanceBookingRequirement": {
          "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
          "$ref": "file://quantitativevalue.json"
        },
        "validThrough": {
          "description": "The end of the validity of offer, price specification, or opening hours data.",
          "type": "string"
        },
        "availabilityStarts": {
          "description": "The beginning of the availability of the product or service included in the offer.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "availableAtOrFrom": {
          "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
          "$ref": "file://place.json"
        },
        "gtin8": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "eligibleDuration": {
          "description": "The duration for which the given offer is valid.",
          "$ref": "file://quantitativevalue.json"
        },
        "seller": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "mpn": {
          "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
          "type": "string"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "businessFunction": {
          "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
          "$ref": "file://businessfunction.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "gtin14": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx\">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "gtin13": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx\">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "acceptedPaymentMethod": {
          "description": "The payment method(s) accepted by seller for this offer.",
          "$ref": "file://paymentmethod.json"
        },
        "validFrom": {
          "description": "The date when the item becomes valid.",
          "type": "string"
        },
        "eligibleRegion": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\n      <br><br> See also <a href=\"/ineligibleRegion\">ineligibleRegion</a>.\n    "
        },
        "includesObject": {
          "description": "This links to a node or nodes indicating the exact quantity of the products included in the offer.",
          "$ref": "file://typeandquantitynode.json"
        },
        "ineligibleRegion": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\n      <br><br> See also <a href=\"/eligibleRegion\">eligibleRegion</a>.\n      "
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "itemOffered": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://service.json"
            }
          ],
          "description": "The item being offered."
        },
        "itemCondition": {
          "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
          "$ref": "file://offeritemcondition.json"
        },
        "availabilityEnds": {
          "description": "The end of the availability of the product or service included in the offer.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "eligibleQuantity": {
          "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
          "$ref": "file://quantitativevalue.json"
        },
        "areaServed": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "priceSpecification": {
          "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
          "$ref": "file://pricespecification.json"
        },
        "eligibleTransactionVolume": {
          "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
          "$ref": "file://pricespecification.json"
        },
        "sku": {
          "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
          "type": "string"
        },
        "availability": {
          "description": "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.",
          "$ref": "file://itemavailability.json"
        },
        "warranty": {
          "description": "The warranty promise(s) included in the offer.",
          "$ref": "file://warrantypromise.json"
        },
        "availableDeliveryMethod": {
          "description": "The delivery method(s) available for this offer.",
          "$ref": "file://deliverymethod.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "taxID": {
      "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
      "type": "string"
    },
    "parent": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "honorificSuffix": {
      "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
      "type": "string"
    },
    "isicV4": {
      "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
      "type": "string"
    },
    "email": {
      "description": "Email address.",
      "type": "string"
    },
    "alumniOf": {
      "oneOf": [
        {
          "version": "2.2",
          "description": "An educational organization.",
          "title": "EducationalOrganization",
          "properties": {
            "member": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "serviceArea": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "brand": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "department": {
              "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
              "$ref": "file://organization.json"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "address": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://postaladdress.json"
                }
              ],
              "description": "Physical address of the item."
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "subOrganization": {
              "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
              "$ref": "file://organization.json"
            },
            "makesOffer": {
              "description": "A pointer to products or services offered by the organization or person.",
              "$ref": "file://offer.json"
            },
            "hasPOS": {
              "description": "Points-of-Sales operated by the organization or person.",
              "$ref": "file://place.json"
            },
            "duns": {
              "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "logo": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "owns": {
              "oneOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "$ref": "file://ownershipinfo.json"
                }
              ],
              "description": "Products owned by the organization or person."
            },
            "seeks": {
              "description": "A pointer to products or services sought by the organization or person (demand).",
              "$ref": "file://demand.json"
            },
            "areaServed": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "employee": {
              "description": "Someone working for this organization.",
              "$ref": "file://person.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "location": {
              "oneOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "founder": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "foundingDate": {
              "description": "The date that this organization was founded.",
              "type": "string"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "alumni": {
              "description": "Alumni of an organization.",
              "$ref": "file://person.json"
            },
            "naics": {
              "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "contactPoints": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "memberOf": {
              "oneOf": [
                {
                  "$ref": "file://programmembership.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
            },
            "founders": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "contactPoint": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "employees": {
              "description": "People working for this organization.",
              "$ref": "file://person.json"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "foundingLocation": {
              "description": "The place where the Organization was founded.",
              "$ref": "file://place.json"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "vatID": {
              "description": "The Value-added Tax ID of the organization or person.",
              "type": "string"
            },
            "dissolutionDate": {
              "description": "The date that this organization was dissolved.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "taxID": {
              "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
              "type": "string"
            },
            "legalName": {
              "description": "The official name of the organization, e.g. the registered company name.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "hasOfferCatalog": {
              "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "file://listitem.json"
                  },
                  {
                    "$ref": "file://thing.json"
                  }
                ]
              }
            },
            "members": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "parentOrganization": {
              "description": "The larger organization that this organization is a branch of, if any.",
              "$ref": "file://organization.json"
            },
            "numberOfEmployees": {
              "description": "The number of employees in an organization e.g. business.",
              "$ref": "file://quantitativevalue.json"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "version": "2.2",
          "description": "An organization such as a school, NGO, corporation, club, etc.",
          "title": "Organization",
          "properties": {
            "member": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "serviceArea": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "brand": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "department": {
              "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
              "$ref": "file://organization.json"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "address": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://postaladdress.json"
                }
              ],
              "description": "Physical address of the item."
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "subOrganization": {
              "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
              "$ref": "file://organization.json"
            },
            "makesOffer": {
              "description": "A pointer to products or services offered by the organization or person.",
              "$ref": "file://offer.json"
            },
            "hasPOS": {
              "description": "Points-of-Sales operated by the organization or person.",
              "$ref": "file://place.json"
            },
            "duns": {
              "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "logo": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "owns": {
              "oneOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "$ref": "file://ownershipinfo.json"
                }
              ],
              "description": "Products owned by the organization or person."
            },
            "seeks": {
              "description": "A pointer to products or services sought by the organization or person (demand).",
              "$ref": "file://demand.json"
            },
            "areaServed": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "employee": {
              "description": "Someone working for this organization.",
              "$ref": "file://person.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "location": {
              "oneOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "founder": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "foundingDate": {
              "description": "The date that this organization was founded.",
              "type": "string"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "alumni": {
              "description": "Alumni of an organization.",
              "$ref": "file://person.json"
            },
            "naics": {
              "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "contactPoints": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "memberOf": {
              "oneOf": [
                {
                  "$ref": "file://programmembership.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
            },
            "founders": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "contactPoint": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "employees": {
              "description": "People working for this organization.",
              "$ref": "file://person.json"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "foundingLocation": {
              "description": "The place where the Organization was founded.",
              "$ref": "file://place.json"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "vatID": {
              "description": "The Value-added Tax ID of the organization or person.",
              "type": "string"
            },
            "dissolutionDate": {
              "description": "The date that this organization was dissolved.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "taxID": {
              "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
              "type": "string"
            },
            "legalName": {
              "description": "The official name of the organization, e.g. the registered company name.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "hasOfferCatalog": {
              "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "file://listitem.json"
                  },
                  {
                    "$ref": "file://thing.json"
                  }
                ]
              }
            },
            "members": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "parentOrganization": {
              "description": "The larger organization that this organization is a branch of, if any.",
              "$ref": "file://organization.json"
            },
            "numberOfEmployees": {
              "description": "The number of employees in an organization e.g. business.",
              "$ref": "file://quantitativevalue.json"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        }
      ],
      "description": "An organization that the person is an alumni of."
    },
    "birthDate": {
      "description": "Date of birth.",
      "type": "string"
    },
    "faxNumber": {
      "description": "The fax number.",
      "type": "string"
    },
    "naics": {
      "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
      "type": "string"
    },
    "relatedTo": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "contactPoints": {
      "version": "2.2",
      "description": "A contact point&#x2014;for example, a Customer Complaints department.",
      "title": "ContactPoint",
      "properties": {
        "contactType": {
          "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
          "type": "string"
        },
        "availableLanguage": {
          "description": "A language someone may use with the item.",
          "$ref": "file://language.json"
        },
        "areaServed": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "contactOption": {
          "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
          "$ref": "file://contactpointoption.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "productSupported": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "serviceArea": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where the service is provided."
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "hoursAvailable": {
          "description": "The hours during which this service or contact is available.",
          "$ref": "file://openinghoursspecification.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "globalLocationNumber": {
      "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
      "type": "string"
    },
    "memberOf": {
      "oneOf": [
        {
          "version": "2.2",
          "description": "Used to describe membership in a loyalty programs (e.g. \"StarAliance\"), traveler clubs (e.g. \"AAA\"), purchase clubs (\"Safeway Club\"), etc.",
          "title": "ProgramMembership",
          "properties": {
            "hostingOrganization": {
              "description": "The organization (airline, travelers' club, etc.) the membership is made with.",
              "$ref": "file://organization.json"
            },
            "member": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "programName": {
              "description": "The program providing the membership.",
              "type": "string"
            },
            "membershipNumber": {
              "description": "A unique identifier for the membership.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "members": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "version": "2.2",
          "description": "An organization such as a school, NGO, corporation, club, etc.",
          "title": "Organization",
          "properties": {
            "member": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "serviceArea": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "brand": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "department": {
              "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
              "$ref": "file://organization.json"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "address": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://postaladdress.json"
                }
              ],
              "description": "Physical address of the item."
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "subOrganization": {
              "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
              "$ref": "file://organization.json"
            },
            "makesOffer": {
              "description": "A pointer to products or services offered by the organization or person.",
              "$ref": "file://offer.json"
            },
            "hasPOS": {
              "description": "Points-of-Sales operated by the organization or person.",
              "$ref": "file://place.json"
            },
            "duns": {
              "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "logo": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "owns": {
              "oneOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "$ref": "file://ownershipinfo.json"
                }
              ],
              "description": "Products owned by the organization or person."
            },
            "seeks": {
              "description": "A pointer to products or services sought by the organization or person (demand).",
              "$ref": "file://demand.json"
            },
            "areaServed": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "employee": {
              "description": "Someone working for this organization.",
              "$ref": "file://person.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "location": {
              "oneOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "founder": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "foundingDate": {
              "description": "The date that this organization was founded.",
              "type": "string"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "alumni": {
              "description": "Alumni of an organization.",
              "$ref": "file://person.json"
            },
            "naics": {
              "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "contactPoints": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "memberOf": {
              "oneOf": [
                {
                  "$ref": "file://programmembership.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
            },
            "founders": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "contactPoint": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "employees": {
              "description": "People working for this organization.",
              "$ref": "file://person.json"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "foundingLocation": {
              "description": "The place where the Organization was founded.",
              "$ref": "file://place.json"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "vatID": {
              "description": "The Value-added Tax ID of the organization or person.",
              "type": "string"
            },
            "dissolutionDate": {
              "description": "The date that this organization was dissolved.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "taxID": {
              "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
              "type": "string"
            },
            "legalName": {
              "description": "The official name of the organization, e.g. the registered company name.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "hasOfferCatalog": {
              "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "file://listitem.json"
                  },
                  {
                    "$ref": "file://thing.json"
                  }
                ]
              }
            },
            "members": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "parentOrganization": {
              "description": "The larger organization that this organization is a branch of, if any.",
              "$ref": "file://organization.json"
            },
            "numberOfEmployees": {
              "description": "The number of employees in an organization e.g. business.",
              "$ref": "file://quantitativevalue.json"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        }
      ],
      "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
    },
    "url": {
      "description": "URL of the item.",
      "type": "string"
    },
    "netWorth": {
      "version": "2.2",
      "description": "A structured value representing a monetary amount. Typically, only the subclasses of this type are used for markup.",
      "title": "PriceSpecification",
      "properties": {
        "maxPrice": {
          "description": "The highest price if the price is a range.",
          "type": "number"
        },
        "validThrough": {
          "description": "The end of the validity of offer, price specification, or opening hours data.",
          "type": "string"
        },
        "validFrom": {
          "description": "The date when the item becomes valid.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "valueAddedTaxIncluded": {
          "description": "Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.",
          "type": "boolean"
        },
        "price": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\n<br />\n<br />\n      Usage guidelines:\n<br />\n<ul>\n<li>Use the <a href=\"/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n      including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.\n</li>\n<li>\n      Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\n</li>\n<li>\n      Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values\n      alongside more human-friendly formatting.\n</li>\n<li>\n      Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\n</li>\n</ul>\n      "
        },
        "minPrice": {
          "description": "The lowest price if the price is a range.",
          "type": "number"
        },
        "priceCurrency": {
          "description": "The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to PriceSpecification and its subtypes.",
          "type": "string"
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "eligibleTransactionVolume": {
          "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
          "$ref": "file://pricespecification.json"
        },
        "eligibleQuantity": {
          "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
          "$ref": "file://quantitativevalue.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "image": {
      "oneOf": [
        {
          "version": "2.2",
          "description": "An image file.",
          "title": "ImageObject",
          "properties": {
            "character": {
              "description": "Fictional person connected with a creative work.",
              "$ref": "file://person.json"
            },
            "encodingFormat": {
              "description": "mp3, mpeg4, etc.",
              "type": "string"
            },
            "audio": {
              "description": "An embedded audio object.",
              "$ref": "file://audioobject.json"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "productionCompany": {
              "description": "The production company or studio responsible for the item e.g. series, video game, episode etc.",
              "$ref": "file://organization.json"
            },
            "discussionUrl": {
              "description": "A link to the page containing the comments of the CreativeWork.",
              "type": "string"
            },
            "isPartOf": {
              "description": "Indicates a CreativeWork that this CreativeWork is (in some sense) part of.",
              "$ref": "file://creativework.json"
            },
            "embedUrl": {
              "description": "A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.",
              "type": "string"
            },
            "width": {
              "oneOf": [
                {
                  "$ref": "file://distance.json"
                },
                {
                  "$ref": "file://quantitativevalue.json"
                }
              ],
              "description": "The width of the item."
            },
            "version": {
              "description": "The version of the CreativeWork embodied by a specified resource.",
              "type": "number"
            },
            "accessibilityControl": {
              "description": "Identifies input methods that are sufficient to fully control the described resource (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "commentCount": {
              "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
              "type": "number"
            },
            "timeRequired": {
              "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
              "$ref": "file://duration.json"
            },
            "producer": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.)."
            },
            "educationalUse": {
              "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
              "type": "string"
            },
            "alternativeHeadline": {
              "description": "A secondary title of the CreativeWork.",
              "type": "string"
            },
            "thumbnail": {
              "description": "Thumbnail image for an image or video.",
              "$ref": "file://imageobject.json"
            },
            "exifData": {
              "oneOf": [
                {
                  "$ref": "file://propertyvalue.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "exif data for this object."
            },
            "playerType": {
              "description": "Player type required&#x2014;for example, Flash or Silverlight.",
              "type": "string"
            },
            "workExample": {
              "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.",
              "$ref": "file://creativework.json"
            },
            "requiresSubscription": {
              "description": "Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').",
              "type": "boolean"
            },
            "bitrate": {
              "description": "The bitrate of the media object.",
              "type": "string"
            },
            "uploadDate": {
              "description": "Date when this media object was uploaded to this site.",
              "type": "string"
            },
            "provider": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller."
            },
            "interactivityType": {
              "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
              "type": "string"
            },
            "license": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A license document that applies to this content, typically indicated by URL."
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "contentLocation": {
              "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
              "$ref": "file://place.json"
            },
            "citation": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc."
            },
            "recordedAt": {
              "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.",
              "$ref": "file://event.json"
            },
            "expires": {
              "description": "Date the content expires and is no longer useful or available. Useful for videos.",
              "type": "string"
            },
            "video": {
              "description": "An embedded video object.",
              "$ref": "file://videoobject.json"
            },
            "editor": {
              "description": "Specifies the Person who edited the CreativeWork.",
              "$ref": "file://person.json"
            },
            "accessibilityFeature": {
              "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "encodesCreativeWork": {
              "description": "The CreativeWork encoded by this media object.",
              "$ref": "file://creativework.json"
            },
            "translationOfWork": {
              "description": "The work that this work has been translated from. e.g. \u7269\u79cd\u8d77\u6e90 is a translationOf \u201cOn the Origin of Species\u201d",
              "$ref": "file://creativework.json"
            },
            "creator": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork."
            },
            "about": {
              "description": "The subject matter of the content.",
              "$ref": "file://thing.json"
            },
            "publication": {
              "description": "A publication event associated with the item.",
              "$ref": "file://publicationevent.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "regionsAllowed": {
              "description": "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href='http://en.wikipedia.org/wiki/ISO_3166'>ISO 3166 format</a>.",
              "$ref": "file://place.json"
            },
            "contentSize": {
              "description": "File size in (mega/kilo) bytes.",
              "type": "string"
            },
            "publisherImprint": {
              "description": "The publishing division which published the comic.",
              "$ref": "file://organization.json"
            },
            "caption": {
              "description": "The caption for this object.",
              "type": "string"
            },
            "isFamilyFriendly": {
              "description": "Indicates whether this content is family friendly.",
              "type": "boolean"
            },
            "position": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "The position of an item in a series or sequence of items."
            },
            "dateModified": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed."
            },
            "headline": {
              "description": "Headline of the article.",
              "type": "string"
            },
            "encodings": {
              "description": "A media object that encodes this CreativeWork.",
              "$ref": "file://mediaobject.json"
            },
            "author": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The author of this content. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably."
            },
            "dateCreated": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The date on which the CreativeWork was created or the item was added to a DataFeed."
            },
            "translator": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "An agent responsible for rendering a translated work from a source work"
            },
            "encoding": {
              "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.",
              "$ref": "file://mediaobject.json"
            },
            "copyrightYear": {
              "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
              "type": "number"
            },
            "audience": {
              "description": "An intended audience, i.e. a group for whom something was created.",
              "$ref": "file://audience.json"
            },
            "releasedEvent": {
              "description": "The place and time the release was issued, expressed as a PublicationEvent.",
              "$ref": "file://publicationevent.json"
            },
            "publisher": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The publisher of the creative work."
            },
            "contentUrl": {
              "description": "Actual bytes of the media object, for example the image file or video file.",
              "type": "string"
            },
            "fileFormat": {
              "description": "Media type (aka MIME format, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information.",
              "type": "string"
            },
            "thumbnailUrl": {
              "description": "A thumbnail image relevant to the Thing.",
              "type": "string"
            },
            "height": {
              "oneOf": [
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://distance.json"
                }
              ],
              "description": "The height of the item."
            },
            "associatedMedia": {
              "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
              "$ref": "file://mediaobject.json"
            },
            "accessibilityHazard": {
              "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "genre": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Genre of the creative work or group."
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "copyrightHolder": {
              "oneOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The party holding the legal copyright to the CreativeWork."
            },
            "educationalAlignment": {
              "description": "An alignment to an established educational framework.",
              "$ref": "file://alignmentobject.json"
            },
            "publishingPrinciples": {
              "description": "Link to page describing the editorial principles of the organization primarily responsible for the creation of the CreativeWork.",
              "type": "string"
            },
            "contentRating": {
              "description": "Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.",
              "type": "string"
            },
            "datePublished": {
              "description": "Date of first broadcast/publication.",
              "type": "string"
            },
            "learningResourceType": {
              "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
              "type": "string"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "associatedArticle": {
              "description": "A NewsArticle associated with the Media Object.",
              "$ref": "file://newsarticle.json"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "exampleOfWork": {
              "description": "A creative work that this work is an example/instance/realization/derivation of.",
              "$ref": "file://creativework.json"
            },
            "workTranslation": {
              "description": "A work that is a translation of the content of this work. e.g. \u897f\u904a\u8a18 has an English workTranslation \u201cJourney to the West\u201d,a German workTranslation \u201cMonkeys Pilgerfahrt\u201d and a Vietnamese  translation T\u00e2y du k\u00fd b\u00ecnh kh\u1ea3o.",
              "$ref": "file://creativework.json"
            },
            "representativeOfPage": {
              "description": "Indicates whether this image is representative of the content of the page.",
              "type": "boolean"
            },
            "typicalAgeRange": {
              "description": "The typical expected age range, e.g. '7-9', '11-'.",
              "type": "string"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "offers": {
              "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
              "$ref": "file://offer.json"
            },
            "duration": {
              "description": "The duration of the item (movie, audio recording, event, etc.) in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>.",
              "$ref": "file://duration.json"
            },
            "hasPart": {
              "description": "Indicates a CreativeWork that is (in some sense) a part of this CreativeWork.",
              "$ref": "file://creativework.json"
            },
            "isBasedOnUrl": {
              "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "sourceOrganization": {
              "description": "The Organization on whose behalf the creator was working.",
              "$ref": "file://organization.json"
            },
            "contributor": {
              "oneOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A secondary contributor to the CreativeWork."
            },
            "accountablePerson": {
              "description": "Specifies the Person that is legally accountable for the CreativeWork.",
              "$ref": "file://person.json"
            },
            "schemaVersion": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using a URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application. "
            },
            "mainEntity": {
              "description": "Indicates the primary entity described in some page or other CreativeWork.",
              "$ref": "file://thing.json"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "mentions": {
              "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
              "$ref": "file://thing.json"
            },
            "text": {
              "description": "The textual content of this CreativeWork.",
              "type": "string"
            },
            "inLanguage": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://language.json"
                }
              ],
              "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href='http://tools.ietf.org/html/bcp47'>IETF BCP 47 standard</a>."
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "locationCreated": {
              "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
              "$ref": "file://place.json"
            },
            "accessibilityAPI": {
              "description": "Indicates that the resource is compatible with the referenced accessibility API (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "keywords": {
              "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
              "type": "string"
            },
            "comment": {
              "description": "Comments, typically from users.",
              "$ref": "file://comment.json"
            },
            "interactionStatistic": {
              "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.",
              "$ref": "file://interactioncounter.json"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "type": "string"
        }
      ],
      "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
    },
    "sameAs": {
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string"
    },
    "description": {
      "description": "A short description of the item.",
      "type": "string"
    },
    "height": {
      "oneOf": [
        {
          "version": "2.2",
          "description": " A point value or interval for product characteristics and other purposes.",
          "title": "QuantitativeValue",
          "properties": {
            "unitText": {
              "description": "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.",
              "type": "string"
            },
            "unitCode": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon."
            },
            "additionalProperty": {
              "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
              "$ref": "file://propertyvalue.json"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "minValue": {
              "description": "The lower value of some characteristic or property.",
              "type": "number"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "maxValue": {
              "description": "The upper value of some characteristic or property.",
              "type": "number"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "value": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://structuredvalue.json"
                },
                {
                  "type": "number"
                }
              ],
              "description": "The value of the quantitative value or property value node. For QuantitativeValue, the recommended type for values is 'Number'. For PropertyValue, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'."
            },
            "valueReference": {
              "oneOf": [
                {
                  "$ref": "file://structuredvalue.json"
                },
                {
                  "$ref": "file://qualitativevalue.json"
                },
                {
                  "$ref": "file://enumeration.json"
                },
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://propertyvalue.json"
                }
              ],
              "description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature."
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "version": "2.2",
          "description": "Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.",
          "title": "Distance",
          "properties": {
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        }
      ],
      "description": "The height of the item."
    },
    "children": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "birthPlace": {
      "version": "2.2",
      "description": "Entities that have a somewhat fixed, physical extension.",
      "title": "Place",
      "properties": {
        "hasMap": {
          "oneOf": [
            {
              "$ref": "file://map.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A URL to a map of the place."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "branchCode": {
          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "containedInPlace": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "containedIn": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "geo": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://geocoordinates.json"
            }
          ],
          "description": "The geo coordinates of the place."
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "photo": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "$ref": "file://photograph.json"
            }
          ],
          "description": "A photograph of this place."
        },
        "photos": {
          "oneOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "Photographs of this place."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "logo": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "maps": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "containsPlace": {
          "description": "The basic containment relation between a place and another that it contains.",
          "$ref": "file://place.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "openingHoursSpecification": {
          "description": "The opening hours of a certain place.",
          "$ref": "file://openinghoursspecification.json"
        },
        "map": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "colleagues": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "address": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "version": "2.2",
          "description": "The mailing address.",
          "title": "PostalAddress",
          "properties": {
            "serviceArea": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "addressCountry": {
              "oneOf": [
                {
                  "$ref": "file://country.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The country. For example, USA. You can also provide the two-letter <a href='http://en.wikipedia.org/wiki/ISO_3166-1'>ISO 3166-1 alpha-2 country code</a>."
            },
            "postOfficeBoxNumber": {
              "description": "The post office box number for PO box addresses.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "streetAddress": {
              "description": "The street address. For example, 1600 Amphitheatre Pkwy.",
              "type": "string"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "hoursAvailable": {
              "description": "The hours during which this service or contact is available.",
              "$ref": "file://openinghoursspecification.json"
            },
            "contactType": {
              "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
              "type": "string"
            },
            "availableLanguage": {
              "description": "A language someone may use with the item.",
              "$ref": "file://language.json"
            },
            "contactOption": {
              "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
              "$ref": "file://contactpointoption.json"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "productSupported": {
              "oneOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
            },
            "addressRegion": {
              "description": "The region. For example, CA.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "areaServed": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "addressLocality": {
              "description": "The locality. For example, Mountain View.",
              "type": "string"
            },
            "postalCode": {
              "description": "The postal code. For example, 94043.",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        }
      ],
      "description": "Physical address of the item."
    },
    "additionalName": {
      "description": "An additional name for a Person, can be used for a middle name.",
      "type": "string"
    },
    "hasPOS": {
      "version": "2.2",
      "description": "Entities that have a somewhat fixed, physical extension.",
      "title": "Place",
      "properties": {
        "hasMap": {
          "oneOf": [
            {
              "$ref": "file://map.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A URL to a map of the place."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "branchCode": {
          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "containedInPlace": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "containedIn": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "geo": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://geocoordinates.json"
            }
          ],
          "description": "The geo coordinates of the place."
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "photo": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "$ref": "file://photograph.json"
            }
          ],
          "description": "A photograph of this place."
        },
        "photos": {
          "oneOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "Photographs of this place."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "logo": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "maps": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "containsPlace": {
          "description": "The basic containment relation between a place and another that it contains.",
          "$ref": "file://place.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "openingHoursSpecification": {
          "description": "The opening hours of a certain place.",
          "$ref": "file://openinghoursspecification.json"
        },
        "map": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "affiliation": {
      "version": "2.2",
      "description": "An organization such as a school, NGO, corporation, club, etc.",
      "title": "Organization",
      "properties": {
        "member": {
          "oneOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
        },
        "serviceArea": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where the service is provided."
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "department": {
          "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
          "$ref": "file://organization.json"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "subOrganization": {
          "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
          "$ref": "file://organization.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "logo": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "areaServed": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "employee": {
          "description": "Someone working for this organization.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "location": {
          "oneOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "founder": {
          "description": "A person who founded this organization.",
          "$ref": "file://person.json"
        },
        "foundingDate": {
          "description": "The date that this organization was founded.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "alumni": {
          "description": "Alumni of an organization.",
          "$ref": "file://person.json"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "founders": {
          "description": "A person who founded this organization.",
          "$ref": "file://person.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "employees": {
          "description": "People working for this organization.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "foundingLocation": {
          "description": "The place where the Organization was founded.",
          "$ref": "file://place.json"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "dissolutionDate": {
          "description": "The date that this organization was dissolved.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "legalName": {
          "description": "The official name of the organization, e.g. the registered company name.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "members": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A member of this organization."
        },
        "parentOrganization": {
          "description": "The larger organization that this organization is a branch of, if any.",
          "$ref": "file://organization.json"
        },
        "numberOfEmployees": {
          "description": "The number of employees in an organization e.g. business.",
          "$ref": "file://quantitativevalue.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "vatID": {
      "description": "The Value-added Tax ID of the organization or person.",
      "type": "string"
    },
    "gender": {
      "description": "Gender of the person.",
      "type": "string"
    },
    "telephone": {
      "description": "The telephone number.",
      "type": "string"
    },
    "workLocation": {
      "oneOf": [
        {
          "version": "2.2",
          "description": "Entities that have a somewhat fixed, physical extension.",
          "title": "Place",
          "properties": {
            "hasMap": {
              "oneOf": [
                {
                  "$ref": "file://map.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A URL to a map of the place."
            },
            "additionalProperty": {
              "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
              "$ref": "file://propertyvalue.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "containedInPlace": {
              "description": "The basic containment relation between a place and one that contains it.",
              "$ref": "file://place.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "containedIn": {
              "description": "The basic containment relation between a place and one that contains it.",
              "$ref": "file://place.json"
            },
            "address": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://postaladdress.json"
                }
              ],
              "description": "Physical address of the item."
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "geo": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://geocoordinates.json"
                }
              ],
              "description": "The geo coordinates of the place."
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "photo": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "$ref": "file://photograph.json"
                }
              ],
              "description": "A photograph of this place."
            },
            "photos": {
              "oneOf": [
                {
                  "$ref": "file://photograph.json"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "Photographs of this place."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "logo": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "maps": {
              "description": "A URL to a map of the place.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "containsPlace": {
              "description": "The basic containment relation between a place and another that it contains.",
              "$ref": "file://place.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "openingHoursSpecification": {
              "description": "The opening hours of a certain place.",
              "$ref": "file://openinghoursspecification.json"
            },
            "map": {
              "description": "A URL to a map of the place.",
              "type": "string"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        },
        {
          "version": "2.2",
          "description": "A contact point&#x2014;for example, a Customer Complaints department.",
          "title": "ContactPoint",
          "properties": {
            "contactType": {
              "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
              "type": "string"
            },
            "availableLanguage": {
              "description": "A language someone may use with the item.",
              "$ref": "file://language.json"
            },
            "areaServed": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "contactOption": {
              "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
              "$ref": "file://contactpointoption.json"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "productSupported": {
              "oneOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "oneOf": [
                {
                  "$ref": "file://creativework.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "image": {
              "oneOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "serviceArea": {
              "oneOf": [
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "hoursAvailable": {
              "description": "The hours during which this service or contact is available.",
              "$ref": "file://openinghoursspecification.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object"
        }
      ],
      "description": "A contact location for a person's place of work."
    },
    "name": {
      "description": "The name of the item.",
      "type": "string"
    },
    "additionalType": {
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string"
    },
    "worksFor": {
      "version": "2.2",
      "description": "An organization such as a school, NGO, corporation, club, etc.",
      "title": "Organization",
      "properties": {
        "member": {
          "oneOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
        },
        "serviceArea": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where the service is provided."
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "department": {
          "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
          "$ref": "file://organization.json"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "subOrganization": {
          "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
          "$ref": "file://organization.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "logo": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "areaServed": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "employee": {
          "description": "Someone working for this organization.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "location": {
          "oneOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "founder": {
          "description": "A person who founded this organization.",
          "$ref": "file://person.json"
        },
        "foundingDate": {
          "description": "The date that this organization was founded.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "alumni": {
          "description": "Alumni of an organization.",
          "$ref": "file://person.json"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "founders": {
          "description": "A person who founded this organization.",
          "$ref": "file://person.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "employees": {
          "description": "People working for this organization.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "foundingLocation": {
          "description": "The place where the Organization was founded.",
          "$ref": "file://place.json"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "dissolutionDate": {
          "description": "The date that this organization was dissolved.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "legalName": {
          "description": "The official name of the organization, e.g. the registered company name.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "members": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A member of this organization."
        },
        "parentOrganization": {
          "description": "The larger organization that this organization is a branch of, if any.",
          "$ref": "file://organization.json"
        },
        "numberOfEmployees": {
          "description": "The number of employees in an organization e.g. business.",
          "$ref": "file://quantitativevalue.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "alternateName": {
      "description": "An alias for the item.",
      "type": "string"
    },
    "givenName": {
      "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
      "type": "string"
    },
    "hasOfferCatalog": {
      "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
      "type": "array",
      "items": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "file://listitem.json"
          },
          {
            "$ref": "file://thing.json"
          }
        ]
      }
    },
    "siblings": {
      "version": "2.2",
      "description": "A person (alive, dead, undead, or fictional).",
      "title": "Person",
      "properties": {
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "brand": {
          "oneOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "owns": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://ownershipinfo.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "homeLocation": {
          "oneOf": [
            {
              "$ref": "file://contactpoint.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "alumniOf": {
          "oneOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "memberOf": {
          "oneOf": [
            {
              "$ref": "file://programmembership.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "height": {
          "oneOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "This is a generated, and simplified, variant of https://schema.org/OfferCatalog. I has been interpreted as a plain array, this behaviour is hard-coded to the itemList types and should be improved.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "file://listitem.json"
              },
              {
                "$ref": "file://thing.json"
              }
            ]
          }
        },
        "address": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://postaladdress.json"
            }
          ],
          "description": "Physical address of the item."
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "workLocation": {
          "oneOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    },
    "contactPoint": {
      "version": "2.2",
      "description": "A contact point&#x2014;for example, a Customer Complaints department.",
      "title": "ContactPoint",
      "properties": {
        "contactType": {
          "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
          "type": "string"
        },
        "availableLanguage": {
          "description": "A language someone may use with the item.",
          "$ref": "file://language.json"
        },
        "areaServed": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "contactOption": {
          "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
          "$ref": "file://contactpointoption.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "productSupported": {
          "oneOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "mainEntityOfPage": {
          "oneOf": [
            {
              "$ref": "file://creativework.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "image": {
          "oneOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "serviceArea": {
          "oneOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The geographic area where the service is provided."
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "hoursAvailable": {
          "description": "The hours during which this service or contact is available.",
          "$ref": "file://openinghoursspecification.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object"
    }
  },
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object"
}