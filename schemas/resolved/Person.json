{
  "description": "A person (alive, dead, undead, or fictional).",
  "version": "2.2",
  "title": "Person",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "properties": {
    "owns": {
      "anyOf": [
        {
          "description": "A structured value providing information about when a certain organization or person owned a certain product.",
          "version": "2.2",
          "title": "OwnershipInfo",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "ownedFrom": {
              "description": "The date and time of obtaining the product.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "acquiredFrom": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The organization or person from which the product was acquired."
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "typeOfGood": {
              "description": "The product that this structured value is referring to.",
              "$ref": "file://product.json"
            },
            "ownedThrough": {
              "description": "The date and time of giving up ownership on the product.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.",
          "version": "2.2",
          "title": "Product",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "isConsumableFor": {
              "description": "A pointer to another product (or multiple products) for which this product is a consumable.",
              "$ref": "file://product.json"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "mpn": {
              "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
              "type": "string"
            },
            "releaseDate": {
              "description": "The release date of a product or product model. This can be used to distinguish the exact variant of a product.",
              "type": "string"
            },
            "offers": {
              "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
              "$ref": "file://offer.json"
            },
            "manufacturer": {
              "description": "The manufacturer of the product.",
              "$ref": "file://organization.json"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "purchaseDate": {
              "description": "The date the item e.g. vehicle was purchased by the current owner.",
              "type": "string"
            },
            "depth": {
              "anyOf": [
                {
                  "$ref": "file://distance.json"
                },
                {
                  "$ref": "file://quantitativevalue.json"
                }
              ],
              "description": "The depth of the item."
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "height": {
              "anyOf": [
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://distance.json"
                }
              ],
              "description": "The height of the item."
            },
            "additionalProperty": {
              "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
              "$ref": "file://propertyvalue.json"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "category": {
              "anyOf": [
                {
                  "$ref": "file://physicalactivitycategory.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://thing.json"
                }
              ],
              "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy."
            },
            "gtin8": {
              "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
              "type": "string"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "logo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "isSimilarTo": {
              "description": "A pointer to another, functionally similar product (or multiple products).",
              "$ref": "file://product.json"
            },
            "audience": {
              "description": "An intended audience, i.e. a group for whom something was created.",
              "$ref": "file://audience.json"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "gtin12": {
              "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-12.aspx\">GTIN-12</a> code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
              "type": "string"
            },
            "productID": {
              "description": "The product identifier, such as ISBN. For example: <code>&lt;meta itemprop='productID' content='isbn:123-456-789'/&gt;</code>.",
              "type": "string"
            },
            "brand": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "sku": {
              "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
              "type": "string"
            },
            "isAccessoryOrSparePartFor": {
              "description": "A pointer to another product (or multiple products) for which this product is an accessory or spare part.",
              "$ref": "file://product.json"
            },
            "width": {
              "anyOf": [
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://distance.json"
                }
              ],
              "description": "The width of the item."
            },
            "gtin13": {
              "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx\">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
              "type": "string"
            },
            "model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://productmodel.json"
                }
              ],
              "description": "The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties."
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "productionDate": {
              "description": "The date of production of the item, e.g. vehicle.",
              "type": "string"
            },
            "isRelatedTo": {
              "description": "A pointer to another, somehow related product (or multiple products).",
              "$ref": "file://product.json"
            },
            "itemCondition": {
              "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
              "$ref": "file://offeritemcondition.json"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "gtin14": {
              "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx\">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
              "type": "string"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "color": {
              "description": "The color of the product.",
              "type": "string"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "weight": {
              "description": "The weight of the product or person.",
              "$ref": "file://quantitativevalue.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Products owned by the organization or person."
    },
    "address": {
      "anyOf": [
        {
          "description": "The mailing address.",
          "version": "2.2",
          "title": "PostalAddress",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "areaServed": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "addressRegion": {
              "description": "The region. For example, CA.",
              "type": "string"
            },
            "availableLanguage": {
              "description": "A language someone may use with the item.",
              "$ref": "file://language.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "streetAddress": {
              "description": "The street address. For example, 1600 Amphitheatre Pkwy.",
              "type": "string"
            },
            "postOfficeBoxNumber": {
              "description": "The post office box number for PO box addresses.",
              "type": "string"
            },
            "contactOption": {
              "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
              "$ref": "file://contactpointoption.json"
            },
            "hoursAvailable": {
              "description": "The hours during which this service or contact is available.",
              "$ref": "file://openinghoursspecification.json"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "serviceArea": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "productSupported": {
              "anyOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
            },
            "contactType": {
              "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
              "type": "string"
            },
            "addressLocality": {
              "description": "The locality. For example, Mountain View.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "addressCountry": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://country.json"
                }
              ],
              "description": "The country. For example, USA. You can also provide the two-letter <a href='http://en.wikipedia.org/wiki/ISO_3166-1'>ISO 3166-1 alpha-2 country code</a>."
            },
            "postalCode": {
              "description": "The postal code. For example, 94043.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "type": "string"
        }
      ],
      "description": "Physical address of the item."
    },
    "sameAs": {
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string"
    },
    "homeLocation": {
      "anyOf": [
        {
          "description": "Entities that have a somewhat fixed, physical extension.",
          "version": "2.2",
          "title": "Place",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "address": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Physical address of the item."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "containedInPlace": {
              "description": "The basic containment relation between a place and one that contains it.",
              "$ref": "file://place.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "containedIn": {
              "description": "The basic containment relation between a place and one that contains it.",
              "$ref": "file://place.json"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "map": {
              "description": "A URL to a map of the place.",
              "type": "string"
            },
            "containsPlace": {
              "description": "The basic containment relation between a place and another that it contains.",
              "$ref": "file://place.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "logo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
              "type": "string"
            },
            "photo": {
              "anyOf": [
                {
                  "$ref": "file://photograph.json"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "A photograph of this place."
            },
            "photos": {
              "anyOf": [
                {
                  "$ref": "file://photograph.json"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "Photographs of this place."
            },
            "additionalProperty": {
              "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
              "$ref": "file://propertyvalue.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "hasMap": {
              "anyOf": [
                {
                  "$ref": "file://map.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A URL to a map of the place."
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "maps": {
              "description": "A URL to a map of the place.",
              "type": "string"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "geo": {
              "anyOf": [
                {
                  "$ref": "file://geocoordinates.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geo coordinates of the place."
            },
            "openingHoursSpecification": {
              "description": "The opening hours of a certain place.",
              "$ref": "file://openinghoursspecification.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "A contact point&#x2014;for example, a Customer Complaints department.",
          "version": "2.2",
          "title": "ContactPoint",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "availableLanguage": {
              "description": "A language someone may use with the item.",
              "$ref": "file://language.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "contactOption": {
              "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
              "$ref": "file://contactpointoption.json"
            },
            "areaServed": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "hoursAvailable": {
              "description": "The hours during which this service or contact is available.",
              "$ref": "file://openinghoursspecification.json"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "serviceArea": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "productSupported": {
              "anyOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "contactType": {
              "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
              "type": "string"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "A contact location for a person's residence."
    },
    "nationality": {
      "description": "A country.",
      "version": "2.2",
      "title": "Country",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "containedInPlace": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "containedIn": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "map": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "containsPlace": {
          "description": "The basic containment relation between a place and another that it contains.",
          "$ref": "file://place.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "logo": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "branchCode": {
          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
          "type": "string"
        },
        "photo": {
          "anyOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "A photograph of this place."
        },
        "photos": {
          "anyOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "Photographs of this place."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "hasMap": {
          "anyOf": [
            {
              "$ref": "file://map.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A URL to a map of the place."
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "maps": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "geo": {
          "anyOf": [
            {
              "$ref": "file://geocoordinates.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geo coordinates of the place."
        },
        "openingHoursSpecification": {
          "description": "The opening hours of a certain place.",
          "$ref": "file://openinghoursspecification.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "globalLocationNumber": {
      "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
      "type": "string"
    },
    "parents": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "alternateName": {
      "description": "An alias for the item.",
      "type": "string"
    },
    "sibling": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "contactPoints": {
      "description": "A contact point&#x2014;for example, a Customer Complaints department.",
      "version": "2.2",
      "title": "ContactPoint",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "availableLanguage": {
          "description": "A language someone may use with the item.",
          "$ref": "file://language.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "contactOption": {
          "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
          "$ref": "file://contactpointoption.json"
        },
        "areaServed": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "hoursAvailable": {
          "description": "The hours during which this service or contact is available.",
          "$ref": "file://openinghoursspecification.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "serviceArea": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://administrativearea.json"
            }
          ],
          "description": "The geographic area where the service is provided."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "productSupported": {
          "anyOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "contactType": {
          "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
          "type": "string"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "memberOf": {
      "anyOf": [
        {
          "description": "An organization such as a school, NGO, corporation, club, etc.",
          "version": "2.2",
          "title": "Organization",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "owns": {
              "anyOf": [
                {
                  "$ref": "file://ownershipinfo.json"
                },
                {
                  "$ref": "file://product.json"
                }
              ],
              "description": "Products owned by the organization or person."
            },
            "address": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Physical address of the item."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "employees": {
              "description": "People working for this organization.",
              "$ref": "file://person.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "dissolutionDate": {
              "description": "The date that this organization was dissolved.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "memberOf": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://programmembership.json"
                }
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
            },
            "hasPOS": {
              "description": "Points-of-Sales operated by the organization or person.",
              "$ref": "file://place.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "alumni": {
              "description": "Alumni of an organization.",
              "$ref": "file://person.json"
            },
            "contactPoint": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "brand": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "member": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "department": {
              "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
              "$ref": "file://organization.json"
            },
            "subOrganization": {
              "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
              "$ref": "file://organization.json"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "employee": {
              "description": "Someone working for this organization.",
              "$ref": "file://person.json"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "foundingLocation": {
              "description": "The place where the Organization was founded.",
              "$ref": "file://place.json"
            },
            "foundingDate": {
              "description": "The date that this organization was founded.",
              "type": "string"
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "legalName": {
              "description": "The official name of the organization, e.g. the registered company name.",
              "type": "string"
            },
            "parentOrganization": {
              "description": "The larger organization that this organization is a branch of, if any.",
              "$ref": "file://organization.json"
            },
            "contactPoints": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "areaServed": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "seeks": {
              "description": "A pointer to products or services sought by the organization or person (demand).",
              "$ref": "file://demand.json"
            },
            "naics": {
              "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "vatID": {
              "description": "The Value-added Tax ID of the organization or person.",
              "type": "string"
            },
            "logo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "hasOfferCatalog": {
              "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
              "$ref": "file://offercatalog.json"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "taxID": {
              "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
              "type": "string"
            },
            "founders": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "founder": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "serviceArea": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "makesOffer": {
              "description": "A pointer to products or services offered by the organization or person.",
              "$ref": "file://offer.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "members": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "duns": {
              "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
              "type": "string"
            },
            "numberOfEmployees": {
              "description": "The number of employees in an organization e.g. business.",
              "$ref": "file://quantitativevalue.json"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "location": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            }
          },
          "type": "object"
        },
        {
          "description": "Used to describe membership in a loyalty programs (e.g. \"StarAliance\"), traveler clubs (e.g. \"AAA\"), purchase clubs (\"Safeway Club\"), etc.",
          "version": "2.2",
          "title": "ProgramMembership",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "member": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "membershipNumber": {
              "description": "A unique identifier for the membership.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "hostingOrganization": {
              "description": "The organization (airline, travelers' club, etc.) the membership is made with.",
              "$ref": "file://organization.json"
            },
            "programName": {
              "description": "The program providing the membership.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "members": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
    },
    "hasPOS": {
      "description": "Entities that have a somewhat fixed, physical extension.",
      "version": "2.2",
      "title": "Place",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "containedInPlace": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "containedIn": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "map": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "containsPlace": {
          "description": "The basic containment relation between a place and another that it contains.",
          "$ref": "file://place.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "logo": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "branchCode": {
          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
          "type": "string"
        },
        "photo": {
          "anyOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "A photograph of this place."
        },
        "photos": {
          "anyOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "Photographs of this place."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "hasMap": {
          "anyOf": [
            {
              "$ref": "file://map.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A URL to a map of the place."
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "maps": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "geo": {
          "anyOf": [
            {
              "$ref": "file://geocoordinates.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geo coordinates of the place."
        },
        "openingHoursSpecification": {
          "description": "The opening hours of a certain place.",
          "$ref": "file://openinghoursspecification.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "jobTitle": {
      "description": "The job title of the person (for example, Financial Manager).",
      "type": "string"
    },
    "birthPlace": {
      "description": "Entities that have a somewhat fixed, physical extension.",
      "version": "2.2",
      "title": "Place",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "containedInPlace": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "containedIn": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "map": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "containsPlace": {
          "description": "The basic containment relation between a place and another that it contains.",
          "$ref": "file://place.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "logo": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "branchCode": {
          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
          "type": "string"
        },
        "photo": {
          "anyOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "A photograph of this place."
        },
        "photos": {
          "anyOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "Photographs of this place."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "hasMap": {
          "anyOf": [
            {
              "$ref": "file://map.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A URL to a map of the place."
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "maps": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "geo": {
          "anyOf": [
            {
              "$ref": "file://geocoordinates.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geo coordinates of the place."
        },
        "openingHoursSpecification": {
          "description": "The opening hours of a certain place.",
          "$ref": "file://openinghoursspecification.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "additionalName": {
      "description": "An additional name for a Person, can be used for a middle name.",
      "type": "string"
    },
    "contactPoint": {
      "description": "A contact point&#x2014;for example, a Customer Complaints department.",
      "version": "2.2",
      "title": "ContactPoint",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "availableLanguage": {
          "description": "A language someone may use with the item.",
          "$ref": "file://language.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "contactOption": {
          "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
          "$ref": "file://contactpointoption.json"
        },
        "areaServed": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "hoursAvailable": {
          "description": "The hours during which this service or contact is available.",
          "$ref": "file://openinghoursspecification.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "serviceArea": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://administrativearea.json"
            }
          ],
          "description": "The geographic area where the service is provided."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "productSupported": {
          "anyOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "contactType": {
          "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
          "type": "string"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "brand": {
      "anyOf": [
        {
          "description": "An organization such as a school, NGO, corporation, club, etc.",
          "version": "2.2",
          "title": "Organization",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "owns": {
              "anyOf": [
                {
                  "$ref": "file://ownershipinfo.json"
                },
                {
                  "$ref": "file://product.json"
                }
              ],
              "description": "Products owned by the organization or person."
            },
            "address": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Physical address of the item."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "employees": {
              "description": "People working for this organization.",
              "$ref": "file://person.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "dissolutionDate": {
              "description": "The date that this organization was dissolved.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "memberOf": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://programmembership.json"
                }
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
            },
            "hasPOS": {
              "description": "Points-of-Sales operated by the organization or person.",
              "$ref": "file://place.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "alumni": {
              "description": "Alumni of an organization.",
              "$ref": "file://person.json"
            },
            "contactPoint": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "brand": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "member": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "department": {
              "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
              "$ref": "file://organization.json"
            },
            "subOrganization": {
              "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
              "$ref": "file://organization.json"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "employee": {
              "description": "Someone working for this organization.",
              "$ref": "file://person.json"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "foundingLocation": {
              "description": "The place where the Organization was founded.",
              "$ref": "file://place.json"
            },
            "foundingDate": {
              "description": "The date that this organization was founded.",
              "type": "string"
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "legalName": {
              "description": "The official name of the organization, e.g. the registered company name.",
              "type": "string"
            },
            "parentOrganization": {
              "description": "The larger organization that this organization is a branch of, if any.",
              "$ref": "file://organization.json"
            },
            "contactPoints": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "areaServed": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "seeks": {
              "description": "A pointer to products or services sought by the organization or person (demand).",
              "$ref": "file://demand.json"
            },
            "naics": {
              "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "vatID": {
              "description": "The Value-added Tax ID of the organization or person.",
              "type": "string"
            },
            "logo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "hasOfferCatalog": {
              "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
              "$ref": "file://offercatalog.json"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "taxID": {
              "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
              "type": "string"
            },
            "founders": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "founder": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "serviceArea": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "makesOffer": {
              "description": "A pointer to products or services offered by the organization or person.",
              "$ref": "file://offer.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "members": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "duns": {
              "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
              "type": "string"
            },
            "numberOfEmployees": {
              "description": "The number of employees in an organization e.g. business.",
              "$ref": "file://quantitativevalue.json"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "location": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            }
          },
          "type": "object"
        },
        {
          "description": "A brand is a name used by an organization or business person for labeling a product, product group, or similar.",
          "version": "2.2",
          "title": "Brand",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "logo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
    },
    "email": {
      "description": "Email address.",
      "type": "string"
    },
    "naics": {
      "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
      "type": "string"
    },
    "knows": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "alumniOf": {
      "anyOf": [
        {
          "description": "An educational organization.",
          "version": "2.2",
          "title": "EducationalOrganization",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "owns": {
              "anyOf": [
                {
                  "$ref": "file://ownershipinfo.json"
                },
                {
                  "$ref": "file://product.json"
                }
              ],
              "description": "Products owned by the organization or person."
            },
            "address": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Physical address of the item."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "employees": {
              "description": "People working for this organization.",
              "$ref": "file://person.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "dissolutionDate": {
              "description": "The date that this organization was dissolved.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "memberOf": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://programmembership.json"
                }
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
            },
            "hasPOS": {
              "description": "Points-of-Sales operated by the organization or person.",
              "$ref": "file://place.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "alumni": {
              "description": "Alumni of an organization.",
              "$ref": "file://person.json"
            },
            "contactPoint": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "brand": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "member": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "department": {
              "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
              "$ref": "file://organization.json"
            },
            "subOrganization": {
              "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
              "$ref": "file://organization.json"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "employee": {
              "description": "Someone working for this organization.",
              "$ref": "file://person.json"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "foundingLocation": {
              "description": "The place where the Organization was founded.",
              "$ref": "file://place.json"
            },
            "foundingDate": {
              "description": "The date that this organization was founded.",
              "type": "string"
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "legalName": {
              "description": "The official name of the organization, e.g. the registered company name.",
              "type": "string"
            },
            "parentOrganization": {
              "description": "The larger organization that this organization is a branch of, if any.",
              "$ref": "file://organization.json"
            },
            "contactPoints": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "areaServed": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "seeks": {
              "description": "A pointer to products or services sought by the organization or person (demand).",
              "$ref": "file://demand.json"
            },
            "naics": {
              "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "vatID": {
              "description": "The Value-added Tax ID of the organization or person.",
              "type": "string"
            },
            "logo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "hasOfferCatalog": {
              "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
              "$ref": "file://offercatalog.json"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "taxID": {
              "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
              "type": "string"
            },
            "founders": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "founder": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "serviceArea": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "makesOffer": {
              "description": "A pointer to products or services offered by the organization or person.",
              "$ref": "file://offer.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "members": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "duns": {
              "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
              "type": "string"
            },
            "numberOfEmployees": {
              "description": "The number of employees in an organization e.g. business.",
              "$ref": "file://quantitativevalue.json"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "location": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            }
          },
          "type": "object"
        },
        {
          "description": "An organization such as a school, NGO, corporation, club, etc.",
          "version": "2.2",
          "title": "Organization",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "owns": {
              "anyOf": [
                {
                  "$ref": "file://ownershipinfo.json"
                },
                {
                  "$ref": "file://product.json"
                }
              ],
              "description": "Products owned by the organization or person."
            },
            "address": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Physical address of the item."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "employees": {
              "description": "People working for this organization.",
              "$ref": "file://person.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "dissolutionDate": {
              "description": "The date that this organization was dissolved.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "memberOf": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://programmembership.json"
                }
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
            },
            "hasPOS": {
              "description": "Points-of-Sales operated by the organization or person.",
              "$ref": "file://place.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "alumni": {
              "description": "Alumni of an organization.",
              "$ref": "file://person.json"
            },
            "contactPoint": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "brand": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://brand.json"
                }
              ],
              "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "member": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
            },
            "department": {
              "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
              "$ref": "file://organization.json"
            },
            "subOrganization": {
              "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
              "$ref": "file://organization.json"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "employee": {
              "description": "Someone working for this organization.",
              "$ref": "file://person.json"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "foundingLocation": {
              "description": "The place where the Organization was founded.",
              "$ref": "file://place.json"
            },
            "foundingDate": {
              "description": "The date that this organization was founded.",
              "type": "string"
            },
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "legalName": {
              "description": "The official name of the organization, e.g. the registered company name.",
              "type": "string"
            },
            "parentOrganization": {
              "description": "The larger organization that this organization is a branch of, if any.",
              "$ref": "file://organization.json"
            },
            "contactPoints": {
              "description": "A contact point for a person or organization.",
              "$ref": "file://contactpoint.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "areaServed": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "seeks": {
              "description": "A pointer to products or services sought by the organization or person (demand).",
              "$ref": "file://demand.json"
            },
            "naics": {
              "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "vatID": {
              "description": "The Value-added Tax ID of the organization or person.",
              "type": "string"
            },
            "logo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "hasOfferCatalog": {
              "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
              "$ref": "file://offercatalog.json"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "taxID": {
              "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
              "type": "string"
            },
            "founders": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "founder": {
              "description": "A person who founded this organization.",
              "$ref": "file://person.json"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "serviceArea": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "makesOffer": {
              "description": "A pointer to products or services offered by the organization or person.",
              "$ref": "file://offer.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "members": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "A member of this organization."
            },
            "duns": {
              "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
              "type": "string"
            },
            "numberOfEmployees": {
              "description": "The number of employees in an organization e.g. business.",
              "$ref": "file://quantitativevalue.json"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "location": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://place.json"
                }
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
            }
          },
          "type": "object"
        }
      ],
      "description": "An organization that the person is an alumni of."
    },
    "familyName": {
      "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
      "type": "string"
    },
    "isicV4": {
      "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
      "type": "string"
    },
    "affiliation": {
      "description": "An organization such as a school, NGO, corporation, club, etc.",
      "version": "2.2",
      "title": "Organization",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "employees": {
          "description": "People working for this organization.",
          "$ref": "file://person.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "dissolutionDate": {
          "description": "The date that this organization was dissolved.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "alumni": {
          "description": "Alumni of an organization.",
          "$ref": "file://person.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "member": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
        },
        "department": {
          "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
          "$ref": "file://organization.json"
        },
        "subOrganization": {
          "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
          "$ref": "file://organization.json"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "employee": {
          "description": "Someone working for this organization.",
          "$ref": "file://person.json"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "foundingLocation": {
          "description": "The place where the Organization was founded.",
          "$ref": "file://place.json"
        },
        "foundingDate": {
          "description": "The date that this organization was founded.",
          "type": "string"
        },
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "legalName": {
          "description": "The official name of the organization, e.g. the registered company name.",
          "type": "string"
        },
        "parentOrganization": {
          "description": "The larger organization that this organization is a branch of, if any.",
          "$ref": "file://organization.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "areaServed": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "logo": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "founders": {
          "description": "A person who founded this organization.",
          "$ref": "file://person.json"
        },
        "founder": {
          "description": "A person who founded this organization.",
          "$ref": "file://person.json"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "serviceArea": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://administrativearea.json"
            }
          ],
          "description": "The geographic area where the service is provided."
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "members": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A member of this organization."
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "numberOfEmployees": {
          "description": "The number of employees in an organization e.g. business.",
          "$ref": "file://quantitativevalue.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "location": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
        }
      },
      "type": "object"
    },
    "siblings": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "deathDate": {
      "description": "Date of death.",
      "type": "string"
    },
    "weight": {
      "description": " A point value or interval for product characteristics and other purposes.",
      "version": "2.2",
      "title": "QuantitativeValue",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "minValue": {
          "description": "The lower value of some characteristic or property.",
          "type": "number"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "maxValue": {
          "description": "The upper value of some characteristic or property.",
          "type": "number"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "value": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "file://structuredvalue.json"
            },
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "description": "The value of the quantitative value or property value node. For QuantitativeValue, the recommended type for values is 'Number'. For PropertyValue, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'."
        },
        "valueReference": {
          "anyOf": [
            {
              "$ref": "file://propertyvalue.json"
            },
            {
              "$ref": "file://enumeration.json"
            },
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://qualitativevalue.json"
            },
            {
              "$ref": "file://structuredvalue.json"
            }
          ],
          "description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature."
        },
        "unitCode": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "description": "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "unitText": {
          "description": "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "birthDate": {
      "description": "Date of birth.",
      "type": "string"
    },
    "colleagues": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "follows": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "gender": {
      "description": "Gender of the person.",
      "type": "string"
    },
    "netWorth": {
      "description": "A structured value representing a monetary amount. Typically, only the subclasses of this type are used for markup.",
      "version": "2.2",
      "title": "PriceSpecification",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "priceCurrency": {
          "description": "The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to PriceSpecification and its subtypes.",
          "type": "string"
        },
        "validFrom": {
          "description": "The date when the item becomes valid.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "price": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\n<br />\n<br />\n      Usage guidelines:\n<br />\n<ul>\n<li>Use the <a href=\"/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n      including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.\n</li>\n<li>\n      Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\n</li>\n<li>\n      Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values\n      alongside more human-friendly formatting.\n</li>\n<li>\n      Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\n</li>\n</ul>\n      "
        },
        "valueAddedTaxIncluded": {
          "description": "Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.",
          "type": "boolean"
        },
        "eligibleTransactionVolume": {
          "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
          "$ref": "file://pricespecification.json"
        },
        "eligibleQuantity": {
          "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
          "$ref": "file://quantitativevalue.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "validThrough": {
          "description": "The end of the validity of offer, price specification, or opening hours data.",
          "type": "string"
        },
        "minPrice": {
          "description": "The lowest price if the price is a range.",
          "type": "number"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "maxPrice": {
          "description": "The highest price if the price is a range.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "performerIn": {
      "description": "An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the 'offers' property. Repeated events may be structured as separate Event objects.",
      "version": "2.2",
      "title": "Event",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "attendee": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A person or organization attending the event."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "duration": {
          "description": "The duration of the item (movie, audio recording, event, etc.) in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>.",
          "$ref": "file://duration.json"
        },
        "inLanguage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://language.json"
            }
          ],
          "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href='http://tools.ietf.org/html/bcp47'>IETF BCP 47 standard</a>."
        },
        "doorTime": {
          "description": "The time admission will commence.",
          "type": "string"
        },
        "endDate": {
          "description": "The end date and time of the item (in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>).",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "performers": {
          "anyOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor."
        },
        "subEvent": {
          "description": "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.",
          "$ref": "file://event.json"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "performer": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A performer at the event&#x2014;for example, a presenter, musician, musical group or actor."
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "subEvents": {
          "description": "Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.",
          "$ref": "file://event.json"
        },
        "typicalAgeRange": {
          "description": "The typical expected age range, e.g. '7-9', '11-'.",
          "type": "string"
        },
        "workPerformed": {
          "description": "A work performed in some event, for example a play performed in a TheaterEvent.",
          "$ref": "file://creativework.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "attendees": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A person attending the event."
        },
        "eventStatus": {
          "description": "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.",
          "$ref": "file://eventstatustype.json"
        },
        "recordedIn": {
          "description": "The CreativeWork that captured all or part of this Event.",
          "$ref": "file://creativework.json"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "workFeatured": {
          "description": "A work featured in some event, e.g. exhibited in an ExhibitionEvent.\n       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).",
          "$ref": "file://creativework.json"
        },
        "organizer": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "An organizer of an Event."
        },
        "startDate": {
          "description": "The start date and time of the item (in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>).",
          "type": "string"
        },
        "superEvent": {
          "description": "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.",
          "$ref": "file://event.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "previousStartDate": {
          "description": "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.",
          "type": "string"
        },
        "location": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
        },
        "offers": {
          "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
          "$ref": "file://offer.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        }
      },
      "type": "object"
    },
    "deathPlace": {
      "description": "Entities that have a somewhat fixed, physical extension.",
      "version": "2.2",
      "title": "Place",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "containedInPlace": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "containedIn": {
          "description": "The basic containment relation between a place and one that contains it.",
          "$ref": "file://place.json"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "map": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "containsPlace": {
          "description": "The basic containment relation between a place and another that it contains.",
          "$ref": "file://place.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "logo": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "branchCode": {
          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
          "type": "string"
        },
        "photo": {
          "anyOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "A photograph of this place."
        },
        "photos": {
          "anyOf": [
            {
              "$ref": "file://photograph.json"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "Photographs of this place."
        },
        "additionalProperty": {
          "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
          "$ref": "file://propertyvalue.json"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "hasMap": {
          "anyOf": [
            {
              "$ref": "file://map.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "A URL to a map of the place."
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "maps": {
          "description": "A URL to a map of the place.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "geo": {
          "anyOf": [
            {
              "$ref": "file://geocoordinates.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geo coordinates of the place."
        },
        "openingHoursSpecification": {
          "description": "The opening hours of a certain place.",
          "$ref": "file://openinghoursspecification.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "additionalType": {
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string"
    },
    "relatedTo": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "url": {
      "description": "URL of the item.",
      "type": "string"
    },
    "seeks": {
      "description": "A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.",
      "version": "2.2",
      "title": "Demand",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "gtin8": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "itemOffered": {
          "anyOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://service.json"
            }
          ],
          "description": "The item being offered."
        },
        "warranty": {
          "description": "The warranty promise(s) included in the offer.",
          "$ref": "file://warrantypromise.json"
        },
        "validThrough": {
          "description": "The end of the validity of offer, price specification, or opening hours data.",
          "type": "string"
        },
        "validFrom": {
          "description": "The date when the item becomes valid.",
          "type": "string"
        },
        "advanceBookingRequirement": {
          "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
          "$ref": "file://quantitativevalue.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "gtin12": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-12.aspx\">GTIN-12</a> code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "availableAtOrFrom": {
          "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
          "$ref": "file://place.json"
        },
        "businessFunction": {
          "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
          "$ref": "file://businessfunction.json"
        },
        "acceptedPaymentMethod": {
          "description": "The payment method(s) accepted by seller for this offer.",
          "$ref": "file://paymentmethod.json"
        },
        "availableDeliveryMethod": {
          "description": "The delivery method(s) available for this offer.",
          "$ref": "file://deliverymethod.json"
        },
        "eligibleTransactionVolume": {
          "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
          "$ref": "file://pricespecification.json"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "eligibleCustomerType": {
          "description": "The type(s) of customers for which the given offer is valid.",
          "$ref": "file://businessentitytype.json"
        },
        "mpn": {
          "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
          "type": "string"
        },
        "areaServed": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "deliveryLeadTime": {
          "description": "The typical delay between the receipt of the order and the goods leaving the warehouse.",
          "$ref": "file://quantitativevalue.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "gtin13": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx\">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "availability": {
          "description": "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.",
          "$ref": "file://itemavailability.json"
        },
        "sku": {
          "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
          "type": "string"
        },
        "inventoryLevel": {
          "description": "The current approximate inventory level for the item or items.",
          "$ref": "file://quantitativevalue.json"
        },
        "itemCondition": {
          "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
          "$ref": "file://offeritemcondition.json"
        },
        "ineligibleRegion": {
          "anyOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\n      <br><br> See also <a href=\"/eligibleRegion\">eligibleRegion</a>.\n      "
        },
        "availabilityStarts": {
          "description": "The beginning of the availability of the product or service included in the offer.",
          "type": "string"
        },
        "includesObject": {
          "description": "This links to a node or nodes indicating the exact quantity of the products included in the offer.",
          "$ref": "file://typeandquantitynode.json"
        },
        "eligibleDuration": {
          "description": "The duration for which the given offer is valid.",
          "$ref": "file://quantitativevalue.json"
        },
        "eligibleQuantity": {
          "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
          "$ref": "file://quantitativevalue.json"
        },
        "gtin14": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx\">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "availabilityEnds": {
          "description": "The end of the availability of the product or service included in the offer.",
          "type": "string"
        },
        "eligibleRegion": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\n      <br><br> See also <a href=\"/ineligibleRegion\">ineligibleRegion</a>.\n    "
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "priceSpecification": {
          "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
          "$ref": "file://pricespecification.json"
        },
        "seller": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider."
        },
        "serialNumber": {
          "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "givenName": {
      "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
      "type": "string"
    },
    "mainEntityOfPage": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "description": "The most generic kind of creative work, including books, movies, photographs, software programs, etc.",
          "version": "2.2",
          "title": "CreativeWork",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "accessibilityHazard": {
              "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "contentRating": {
              "description": "Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.",
              "type": "string"
            },
            "dateModified": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed."
            },
            "copyrightHolder": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The party holding the legal copyright to the CreativeWork."
            },
            "genre": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Genre of the creative work or group."
            },
            "offers": {
              "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
              "$ref": "file://offer.json"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "exampleOfWork": {
              "description": "A creative work that this work is an example/instance/realization/derivation of.",
              "$ref": "file://creativework.json"
            },
            "about": {
              "description": "The subject matter of the content.",
              "$ref": "file://thing.json"
            },
            "text": {
              "description": "The textual content of this CreativeWork.",
              "type": "string"
            },
            "interactivityType": {
              "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
              "type": "string"
            },
            "translationOfWork": {
              "description": "The work that this work has been translated from. e.g. \u7269\u79cd\u8d77\u6e90 is a translationOf \u201cOn the Origin of Species\u201d",
              "$ref": "file://creativework.json"
            },
            "associatedMedia": {
              "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
              "$ref": "file://mediaobject.json"
            },
            "mentions": {
              "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
              "$ref": "file://thing.json"
            },
            "datePublished": {
              "description": "Date of first broadcast/publication.",
              "type": "string"
            },
            "publishingPrinciples": {
              "description": "Link to page describing the editorial principles of the organization primarily responsible for the creation of the CreativeWork.",
              "type": "string"
            },
            "character": {
              "description": "Fictional person connected with a creative work.",
              "$ref": "file://person.json"
            },
            "educationalUse": {
              "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
              "type": "string"
            },
            "encoding": {
              "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.",
              "$ref": "file://mediaobject.json"
            },
            "audio": {
              "description": "An embedded audio object.",
              "$ref": "file://audioobject.json"
            },
            "isFamilyFriendly": {
              "description": "Indicates whether this content is family friendly.",
              "type": "boolean"
            },
            "workExample": {
              "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.",
              "$ref": "file://creativework.json"
            },
            "contentLocation": {
              "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
              "$ref": "file://place.json"
            },
            "version": {
              "description": "The version of the CreativeWork embodied by a specified resource.",
              "type": "number"
            },
            "accountablePerson": {
              "description": "Specifies the Person that is legally accountable for the CreativeWork.",
              "$ref": "file://person.json"
            },
            "sourceOrganization": {
              "description": "The Organization on whose behalf the creator was working.",
              "$ref": "file://organization.json"
            },
            "isBasedOnUrl": {
              "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "mainEntity": {
              "description": "Indicates the primary entity described in some page or other CreativeWork.",
              "$ref": "file://thing.json"
            },
            "video": {
              "description": "An embedded video object.",
              "$ref": "file://videoobject.json"
            },
            "comment": {
              "description": "Comments, typically from users.",
              "$ref": "file://comment.json"
            },
            "thumbnailUrl": {
              "description": "A thumbnail image relevant to the Thing.",
              "type": "string"
            },
            "producer": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.)."
            },
            "creator": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork."
            },
            "encodings": {
              "description": "A media object that encodes this CreativeWork.",
              "$ref": "file://mediaobject.json"
            },
            "author": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The author of this content. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably."
            },
            "interactionStatistic": {
              "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.",
              "$ref": "file://interactioncounter.json"
            },
            "fileFormat": {
              "description": "Media type (aka MIME format, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information.",
              "type": "string"
            },
            "accessibilityFeature": {
              "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "copyrightYear": {
              "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
              "type": "number"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "locationCreated": {
              "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
              "$ref": "file://place.json"
            },
            "position": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The position of an item in a series or sequence of items."
            },
            "headline": {
              "description": "Headline of the article.",
              "type": "string"
            },
            "contributor": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A secondary contributor to the CreativeWork."
            },
            "citation": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc."
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "commentCount": {
              "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
              "type": "number"
            },
            "publisher": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The publisher of the creative work."
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "dateCreated": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The date on which the CreativeWork was created or the item was added to a DataFeed."
            },
            "translator": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "An agent responsible for rendering a translated work from a source work"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "releasedEvent": {
              "description": "The place and time the release was issued, expressed as a PublicationEvent.",
              "$ref": "file://publicationevent.json"
            },
            "editor": {
              "description": "Specifies the Person who edited the CreativeWork.",
              "$ref": "file://person.json"
            },
            "schemaVersion": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using a URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application. "
            },
            "typicalAgeRange": {
              "description": "The typical expected age range, e.g. '7-9', '11-'.",
              "type": "string"
            },
            "audience": {
              "description": "An intended audience, i.e. a group for whom something was created.",
              "$ref": "file://audience.json"
            },
            "recordedAt": {
              "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.",
              "$ref": "file://event.json"
            },
            "publisherImprint": {
              "description": "The publishing division which published the comic.",
              "$ref": "file://organization.json"
            },
            "keywords": {
              "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
              "type": "string"
            },
            "inLanguage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://language.json"
                }
              ],
              "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href='http://tools.ietf.org/html/bcp47'>IETF BCP 47 standard</a>."
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "workTranslation": {
              "description": "A work that is a translation of the content of this work. e.g. \u897f\u904a\u8a18 has an English workTranslation \u201cJourney to the West\u201d,a German workTranslation \u201cMonkeys Pilgerfahrt\u201d and a Vietnamese  translation T\u00e2y du k\u00fd b\u00ecnh kh\u1ea3o.",
              "$ref": "file://creativework.json"
            },
            "provider": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller."
            },
            "discussionUrl": {
              "description": "A link to the page containing the comments of the CreativeWork.",
              "type": "string"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "accessibilityAPI": {
              "description": "Indicates that the resource is compatible with the referenced accessibility API (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "timeRequired": {
              "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
              "$ref": "file://duration.json"
            },
            "license": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "A license document that applies to this content, typically indicated by URL."
            },
            "learningResourceType": {
              "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
              "type": "string"
            },
            "hasPart": {
              "description": "Indicates a CreativeWork that is (in some sense) a part of this CreativeWork.",
              "$ref": "file://creativework.json"
            },
            "isPartOf": {
              "description": "Indicates a CreativeWork that this CreativeWork is (in some sense) part of.",
              "$ref": "file://creativework.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "educationalAlignment": {
              "description": "An alignment to an established educational framework.",
              "$ref": "file://alignmentobject.json"
            },
            "publication": {
              "description": "A publication event associated with the item.",
              "$ref": "file://publicationevent.json"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            },
            "alternativeHeadline": {
              "description": "A secondary title of the CreativeWork.",
              "type": "string"
            },
            "accessibilityControl": {
              "description": "Identifies input methods that are sufficient to fully control the described resource (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
    },
    "description": {
      "description": "A short description of the item.",
      "type": "string"
    },
    "worksFor": {
      "description": "An organization such as a school, NGO, corporation, club, etc.",
      "version": "2.2",
      "title": "Organization",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "employees": {
          "description": "People working for this organization.",
          "$ref": "file://person.json"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "events": {
          "description": "Upcoming or past events associated with this place or organization.",
          "$ref": "file://event.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "dissolutionDate": {
          "description": "The date that this organization was dissolved.",
          "type": "string"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "alumni": {
          "description": "Alumni of an organization.",
          "$ref": "file://person.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "member": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals."
        },
        "department": {
          "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
          "$ref": "file://organization.json"
        },
        "subOrganization": {
          "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
          "$ref": "file://organization.json"
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "employee": {
          "description": "Someone working for this organization.",
          "$ref": "file://person.json"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "foundingLocation": {
          "description": "The place where the Organization was founded.",
          "$ref": "file://place.json"
        },
        "foundingDate": {
          "description": "The date that this organization was founded.",
          "type": "string"
        },
        "event": {
          "description": "Upcoming or past event associated with this place, organization, or action.",
          "$ref": "file://event.json"
        },
        "legalName": {
          "description": "The official name of the organization, e.g. the registered company name.",
          "type": "string"
        },
        "parentOrganization": {
          "description": "The larger organization that this organization is a branch of, if any.",
          "$ref": "file://organization.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "areaServed": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "logo": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://imageobject.json"
            }
          ],
          "description": "An associated logo."
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "founders": {
          "description": "A person who founded this organization.",
          "$ref": "file://person.json"
        },
        "founder": {
          "description": "A person who founded this organization.",
          "$ref": "file://person.json"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "serviceArea": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://geoshape.json"
            },
            {
              "$ref": "file://administrativearea.json"
            }
          ],
          "description": "The geographic area where the service is provided."
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "members": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A member of this organization."
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "numberOfEmployees": {
          "description": "The number of employees in an organization e.g. business.",
          "$ref": "file://quantitativevalue.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "location": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
        }
      },
      "type": "object"
    },
    "parent": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "honorificPrefix": {
      "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
      "type": "string"
    },
    "hasOfferCatalog": {
      "description": "An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.",
      "version": "2.2",
      "title": "OfferCatalog",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "numberOfItems": {
          "description": "The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.",
          "type": "number"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "itemListOrder": {
          "anyOf": [
            {
              "$ref": "file://itemlistordertype.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Type of ordering (e.g. Ascending, Descending, Unordered)."
        },
        "itemListElement": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://listitem.json"
            },
            {
              "$ref": "file://thing.json"
            }
          ],
          "description": "For itemListElement values, you can use simple strings (e.g. \"Peter\", \"Paul\", \"Mary\"), existing entities, or use ListItem.\n    <br/><br/>\n    Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.\n    <br/><br/>\n    Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases."
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "faxNumber": {
      "description": "The fax number.",
      "type": "string"
    },
    "workLocation": {
      "anyOf": [
        {
          "description": "Entities that have a somewhat fixed, physical extension.",
          "version": "2.2",
          "title": "Place",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "event": {
              "description": "Upcoming or past event associated with this place, organization, or action.",
              "$ref": "file://event.json"
            },
            "address": {
              "anyOf": [
                {
                  "$ref": "file://postaladdress.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Physical address of the item."
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "containedInPlace": {
              "description": "The basic containment relation between a place and one that contains it.",
              "$ref": "file://place.json"
            },
            "globalLocationNumber": {
              "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
              "type": "string"
            },
            "events": {
              "description": "Upcoming or past events associated with this place or organization.",
              "$ref": "file://event.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "containedIn": {
              "description": "The basic containment relation between a place and one that contains it.",
              "$ref": "file://place.json"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "map": {
              "description": "A URL to a map of the place.",
              "type": "string"
            },
            "containsPlace": {
              "description": "The basic containment relation between a place and another that it contains.",
              "$ref": "file://place.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "logo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "An associated logo."
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n<br /><br /> For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
              "type": "string"
            },
            "photo": {
              "anyOf": [
                {
                  "$ref": "file://photograph.json"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "A photograph of this place."
            },
            "photos": {
              "anyOf": [
                {
                  "$ref": "file://photograph.json"
                },
                {
                  "$ref": "file://imageobject.json"
                }
              ],
              "description": "Photographs of this place."
            },
            "additionalProperty": {
              "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
              "$ref": "file://propertyvalue.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "hasMap": {
              "anyOf": [
                {
                  "$ref": "file://map.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "A URL to a map of the place."
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "maps": {
              "description": "A URL to a map of the place.",
              "type": "string"
            },
            "isicV4": {
              "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
              "type": "string"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "geo": {
              "anyOf": [
                {
                  "$ref": "file://geocoordinates.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geo coordinates of the place."
            },
            "openingHoursSpecification": {
              "description": "The opening hours of a certain place.",
              "$ref": "file://openinghoursspecification.json"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "A contact point&#x2014;for example, a Customer Complaints department.",
          "version": "2.2",
          "title": "ContactPoint",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "availableLanguage": {
              "description": "A language someone may use with the item.",
              "$ref": "file://language.json"
            },
            "faxNumber": {
              "description": "The fax number.",
              "type": "string"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "contactOption": {
              "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
              "$ref": "file://contactpointoption.json"
            },
            "areaServed": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "type": "string"
                },
                {
                  "$ref": "file://administrativearea.json"
                },
                {
                  "$ref": "file://geoshape.json"
                }
              ],
              "description": "The geographic area where a service or offered item is provided."
            },
            "hoursAvailable": {
              "description": "The hours during which this service or contact is available.",
              "$ref": "file://openinghoursspecification.json"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "telephone": {
              "description": "The telephone number.",
              "type": "string"
            },
            "serviceArea": {
              "anyOf": [
                {
                  "$ref": "file://place.json"
                },
                {
                  "$ref": "file://geoshape.json"
                },
                {
                  "$ref": "file://administrativearea.json"
                }
              ],
              "description": "The geographic area where the service is provided."
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "productSupported": {
              "anyOf": [
                {
                  "$ref": "file://product.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\")."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "contactType": {
              "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
              "type": "string"
            },
            "email": {
              "description": "Email address.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "A contact location for a person's place of work."
    },
    "awards": {
      "description": "Awards won by or for this item.",
      "type": "string"
    },
    "colleague": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "height": {
      "anyOf": [
        {
          "description": " A point value or interval for product characteristics and other purposes.",
          "version": "2.2",
          "title": "QuantitativeValue",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "additionalProperty": {
              "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. <br /><br />\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
              "$ref": "file://propertyvalue.json"
            },
            "minValue": {
              "description": "The lower value of some characteristic or property.",
              "type": "number"
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "maxValue": {
              "description": "The upper value of some characteristic or property.",
              "type": "number"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "value": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "file://structuredvalue.json"
                },
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "The value of the quantitative value or property value node. For QuantitativeValue, the recommended type for values is 'Number'. For PropertyValue, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'."
            },
            "valueReference": {
              "anyOf": [
                {
                  "$ref": "file://propertyvalue.json"
                },
                {
                  "$ref": "file://enumeration.json"
                },
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://qualitativevalue.json"
                },
                {
                  "$ref": "file://structuredvalue.json"
                }
              ],
              "description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature."
            },
            "unitCode": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon."
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "unitText": {
              "description": "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.",
          "version": "2.2",
          "title": "Distance",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The height of the item."
    },
    "image": {
      "anyOf": [
        {
          "description": "An image file.",
          "version": "2.2",
          "title": "ImageObject",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": {
            "accessibilityHazard": {
              "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "exampleOfWork": {
              "description": "A creative work that this work is an example/instance/realization/derivation of.",
              "$ref": "file://creativework.json"
            },
            "associatedArticle": {
              "description": "A NewsArticle associated with the Media Object.",
              "$ref": "file://newsarticle.json"
            },
            "dateModified": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed."
            },
            "genre": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Genre of the creative work or group."
            },
            "alternateName": {
              "description": "An alias for the item.",
              "type": "string"
            },
            "workExample": {
              "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.",
              "$ref": "file://creativework.json"
            },
            "about": {
              "description": "The subject matter of the content.",
              "$ref": "file://thing.json"
            },
            "text": {
              "description": "The textual content of this CreativeWork.",
              "type": "string"
            },
            "contentSize": {
              "description": "File size in (mega/kilo) bytes.",
              "type": "string"
            },
            "datePublished": {
              "description": "Date of first broadcast/publication.",
              "type": "string"
            },
            "caption": {
              "description": "The caption for this object.",
              "type": "string"
            },
            "character": {
              "description": "Fictional person connected with a creative work.",
              "$ref": "file://person.json"
            },
            "educationalUse": {
              "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
              "type": "string"
            },
            "encoding": {
              "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.",
              "$ref": "file://mediaobject.json"
            },
            "headline": {
              "description": "Headline of the article.",
              "type": "string"
            },
            "bitrate": {
              "description": "The bitrate of the media object.",
              "type": "string"
            },
            "accessibilityAPI": {
              "description": "Indicates that the resource is compatible with the referenced accessibility API (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "comment": {
              "description": "Comments, typically from users.",
              "$ref": "file://comment.json"
            },
            "producer": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.)."
            },
            "creator": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork."
            },
            "encodings": {
              "description": "A media object that encodes this CreativeWork.",
              "$ref": "file://mediaobject.json"
            },
            "author": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The author of this content. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably."
            },
            "interactionStatistic": {
              "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.",
              "$ref": "file://interactioncounter.json"
            },
            "fileFormat": {
              "description": "Media type (aka MIME format, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information.",
              "type": "string"
            },
            "productionCompany": {
              "description": "The production company or studio responsible for the item e.g. series, video game, episode etc.",
              "$ref": "file://organization.json"
            },
            "accessibilityFeature": {
              "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "copyrightYear": {
              "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
              "type": "number"
            },
            "provider": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller."
            },
            "reviews": {
              "description": "Review of the item.",
              "$ref": "file://review.json"
            },
            "encodingFormat": {
              "description": "mp3, mpeg4, etc.",
              "type": "string"
            },
            "thumbnail": {
              "description": "Thumbnail image for an image or video.",
              "$ref": "file://imageobject.json"
            },
            "dateCreated": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The date on which the CreativeWork was created or the item was added to a DataFeed."
            },
            "mainEntityOfPage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
            },
            "regionsAllowed": {
              "description": "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href='http://en.wikipedia.org/wiki/ISO_3166'>ISO 3166 format</a>.",
              "$ref": "file://place.json"
            },
            "releasedEvent": {
              "description": "The place and time the release was issued, expressed as a PublicationEvent.",
              "$ref": "file://publicationevent.json"
            },
            "editor": {
              "description": "Specifies the Person who edited the CreativeWork.",
              "$ref": "file://person.json"
            },
            "typicalAgeRange": {
              "description": "The typical expected age range, e.g. '7-9', '11-'.",
              "type": "string"
            },
            "recordedAt": {
              "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.",
              "$ref": "file://event.json"
            },
            "keywords": {
              "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
              "type": "string"
            },
            "encodesCreativeWork": {
              "description": "The CreativeWork encoded by this media object.",
              "$ref": "file://creativework.json"
            },
            "license": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "A license document that applies to this content, typically indicated by URL."
            },
            "width": {
              "anyOf": [
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://distance.json"
                }
              ],
              "description": "The width of the item."
            },
            "timeRequired": {
              "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
              "$ref": "file://duration.json"
            },
            "accessibilityControl": {
              "description": "Identifies input methods that are sufficient to fully control the described resource (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
              "type": "string"
            },
            "review": {
              "description": "A review of the item.",
              "$ref": "file://review.json"
            },
            "educationalAlignment": {
              "description": "An alignment to an established educational framework.",
              "$ref": "file://alignmentobject.json"
            },
            "publication": {
              "description": "A publication event associated with the item.",
              "$ref": "file://publicationevent.json"
            },
            "alternativeHeadline": {
              "description": "A secondary title of the CreativeWork.",
              "type": "string"
            },
            "sameAs": {
              "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
              "type": "string"
            },
            "translationOfWork": {
              "description": "The work that this work has been translated from. e.g. \u7269\u79cd\u8d77\u6e90 is a translationOf \u201cOn the Origin of Species\u201d",
              "$ref": "file://creativework.json"
            },
            "requiresSubscription": {
              "description": "Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').",
              "type": "boolean"
            },
            "offers": {
              "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
              "$ref": "file://offer.json"
            },
            "embedUrl": {
              "description": "A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.",
              "type": "string"
            },
            "associatedMedia": {
              "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
              "$ref": "file://mediaobject.json"
            },
            "mentions": {
              "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
              "$ref": "file://thing.json"
            },
            "publishingPrinciples": {
              "description": "Link to page describing the editorial principles of the organization primarily responsible for the creation of the CreativeWork.",
              "type": "string"
            },
            "interactivityType": {
              "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
              "type": "string"
            },
            "representativeOfPage": {
              "description": "Indicates whether this image is representative of the content of the page.",
              "type": "boolean"
            },
            "contentUrl": {
              "description": "Actual bytes of the media object, for example the image file or video file.",
              "type": "string"
            },
            "audio": {
              "description": "An embedded audio object.",
              "$ref": "file://audioobject.json"
            },
            "isFamilyFriendly": {
              "description": "Indicates whether this content is family friendly.",
              "type": "boolean"
            },
            "version": {
              "description": "The version of the CreativeWork embodied by a specified resource.",
              "type": "number"
            },
            "hasPart": {
              "description": "Indicates a CreativeWork that is (in some sense) a part of this CreativeWork.",
              "$ref": "file://creativework.json"
            },
            "isBasedOnUrl": {
              "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
              "type": "string"
            },
            "aggregateRating": {
              "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
              "$ref": "file://aggregaterating.json"
            },
            "mainEntity": {
              "description": "Indicates the primary entity described in some page or other CreativeWork.",
              "$ref": "file://thing.json"
            },
            "video": {
              "description": "An embedded video object.",
              "$ref": "file://videoobject.json"
            },
            "accountablePerson": {
              "description": "Specifies the Person that is legally accountable for the CreativeWork.",
              "$ref": "file://person.json"
            },
            "thumbnailUrl": {
              "description": "A thumbnail image relevant to the Thing.",
              "type": "string"
            },
            "isPartOf": {
              "description": "Indicates a CreativeWork that this CreativeWork is (in some sense) part of.",
              "$ref": "file://creativework.json"
            },
            "translator": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "An agent responsible for rendering a translated work from a source work"
            },
            "expires": {
              "description": "Date the content expires and is no longer useful or available. Useful for videos.",
              "type": "string"
            },
            "playerType": {
              "description": "Player type required&#x2014;for example, Flash or Silverlight.",
              "type": "string"
            },
            "locationCreated": {
              "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
              "$ref": "file://place.json"
            },
            "position": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The position of an item in a series or sequence of items."
            },
            "contributor": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "A secondary contributor to the CreativeWork."
            },
            "citation": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://creativework.json"
                }
              ],
              "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc."
            },
            "additionalType": {
              "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
              "type": "string"
            },
            "url": {
              "description": "URL of the item.",
              "type": "string"
            },
            "copyrightHolder": {
              "anyOf": [
                {
                  "$ref": "file://organization.json"
                },
                {
                  "$ref": "file://person.json"
                }
              ],
              "description": "The party holding the legal copyright to the CreativeWork."
            },
            "sourceOrganization": {
              "description": "The Organization on whose behalf the creator was working.",
              "$ref": "file://organization.json"
            },
            "potentialAction": {
              "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
              "$ref": "file://action.json"
            },
            "duration": {
              "description": "The duration of the item (movie, audio recording, event, etc.) in <a href='http://en.wikipedia.org/wiki/ISO_8601'>ISO 8601 date format</a>.",
              "$ref": "file://duration.json"
            },
            "uploadDate": {
              "description": "Date when this media object was uploaded to this site.",
              "type": "string"
            },
            "schemaVersion": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using a URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application. "
            },
            "contentLocation": {
              "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
              "$ref": "file://place.json"
            },
            "audience": {
              "description": "An intended audience, i.e. a group for whom something was created.",
              "$ref": "file://audience.json"
            },
            "award": {
              "description": "An award won by or for this item.",
              "type": "string"
            },
            "inLanguage": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "file://language.json"
                }
              ],
              "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href='http://tools.ietf.org/html/bcp47'>IETF BCP 47 standard</a>."
            },
            "name": {
              "description": "The name of the item.",
              "type": "string"
            },
            "workTranslation": {
              "description": "A work that is a translation of the content of this work. e.g. \u897f\u904a\u8a18 has an English workTranslation \u201cJourney to the West\u201d,a German workTranslation \u201cMonkeys Pilgerfahrt\u201d and a Vietnamese  translation T\u00e2y du k\u00fd b\u00ecnh kh\u1ea3o.",
              "$ref": "file://creativework.json"
            },
            "publisherImprint": {
              "description": "The publishing division which published the comic.",
              "$ref": "file://organization.json"
            },
            "discussionUrl": {
              "description": "A link to the page containing the comments of the CreativeWork.",
              "type": "string"
            },
            "height": {
              "anyOf": [
                {
                  "$ref": "file://quantitativevalue.json"
                },
                {
                  "$ref": "file://distance.json"
                }
              ],
              "description": "The height of the item."
            },
            "contentRating": {
              "description": "Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.",
              "type": "string"
            },
            "learningResourceType": {
              "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
              "type": "string"
            },
            "publisher": {
              "anyOf": [
                {
                  "$ref": "file://person.json"
                },
                {
                  "$ref": "file://organization.json"
                }
              ],
              "description": "The publisher of the creative work."
            },
            "exifData": {
              "anyOf": [
                {
                  "$ref": "file://propertyvalue.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "exif data for this object."
            },
            "image": {
              "anyOf": [
                {
                  "$ref": "file://imageobject.json"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
            },
            "description": {
              "description": "A short description of the item.",
              "type": "string"
            },
            "commentCount": {
              "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
              "type": "number"
            },
            "awards": {
              "description": "Awards won by or for this item.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "type": "string"
        }
      ],
      "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
    },
    "taxID": {
      "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
      "type": "string"
    },
    "spouse": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "vatID": {
      "description": "The Value-added Tax ID of the organization or person.",
      "type": "string"
    },
    "telephone": {
      "description": "The telephone number.",
      "type": "string"
    },
    "makesOffer": {
      "description": "An offer to transfer some rights to an item or to provide a service&#x2014;for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.\n      <br/><br/>\n      For <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GTIN</a>-related fields, see\n      <a href=\"http://www.gs1.org/barcodes/support/check_digit_calculator\">Check Digit calculator</a>\n      and <a href=\"http://www.gs1us.org/resources/standards/gtin-validation-guide\">validation guide</a>\n      from <a href=\"http://www.gs1.org/\">GS1</a>.",
      "version": "2.2",
      "title": "Offer",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "gtin12": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-12.aspx\">GTIN-12</a> code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "warranty": {
          "description": "The warranty promise(s) included in the offer.",
          "$ref": "file://warrantypromise.json"
        },
        "addOn": {
          "description": "An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).",
          "$ref": "file://offer.json"
        },
        "advanceBookingRequirement": {
          "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
          "$ref": "file://quantitativevalue.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "itemCondition": {
          "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
          "$ref": "file://offeritemcondition.json"
        },
        "acceptedPaymentMethod": {
          "description": "The payment method(s) accepted by seller for this offer.",
          "$ref": "file://paymentmethod.json"
        },
        "eligibleQuantity": {
          "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
          "$ref": "file://quantitativevalue.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "mpn": {
          "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
          "type": "string"
        },
        "includesObject": {
          "description": "This links to a node or nodes indicating the exact quantity of the products included in the offer.",
          "$ref": "file://typeandquantitynode.json"
        },
        "priceValidUntil": {
          "description": "The date after which the price is no longer available.",
          "type": "string"
        },
        "gtin13": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx\">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "availability": {
          "description": "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.",
          "$ref": "file://itemavailability.json"
        },
        "priceSpecification": {
          "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
          "$ref": "file://pricespecification.json"
        },
        "offeredBy": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "A pointer to the organization or person making the offer."
        },
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
          "$ref": "file://aggregaterating.json"
        },
        "deliveryLeadTime": {
          "description": "The typical delay between the receipt of the order and the goods leaving the warehouse.",
          "$ref": "file://quantitativevalue.json"
        },
        "eligibleDuration": {
          "description": "The duration for which the given offer is valid.",
          "$ref": "file://quantitativevalue.json"
        },
        "gtin14": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx\">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "availabilityEnds": {
          "description": "The end of the availability of the product or service included in the offer.",
          "type": "string"
        },
        "seller": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://person.json"
            }
          ],
          "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider."
        },
        "itemOffered": {
          "anyOf": [
            {
              "$ref": "file://product.json"
            },
            {
              "$ref": "file://service.json"
            }
          ],
          "description": "The item being offered."
        },
        "validFrom": {
          "description": "The date when the item becomes valid.",
          "type": "string"
        },
        "areaServed": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://administrativearea.json"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The geographic area where a service or offered item is provided."
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "reviews": {
          "description": "Review of the item.",
          "$ref": "file://review.json"
        },
        "availableAtOrFrom": {
          "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
          "$ref": "file://place.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "price": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\n<br />\n<br />\n      Usage guidelines:\n<br />\n<ul>\n<li>Use the <a href=\"/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n      including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.\n</li>\n<li>\n      Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\n</li>\n<li>\n      Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values\n      alongside more human-friendly formatting.\n</li>\n<li>\n      Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\n</li>\n</ul>\n      "
        },
        "businessFunction": {
          "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
          "$ref": "file://businessfunction.json"
        },
        "eligibleTransactionVolume": {
          "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
          "$ref": "file://pricespecification.json"
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "category": {
          "anyOf": [
            {
              "$ref": "file://physicalactivitycategory.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://thing.json"
            }
          ],
          "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy."
        },
        "eligibleCustomerType": {
          "description": "The type(s) of customers for which the given offer is valid.",
          "$ref": "file://businessentitytype.json"
        },
        "gtin8": {
          "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
          "type": "string"
        },
        "availableDeliveryMethod": {
          "description": "The delivery method(s) available for this offer.",
          "$ref": "file://deliverymethod.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "sku": {
          "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
          "type": "string"
        },
        "inventoryLevel": {
          "description": "The current approximate inventory level for the item or items.",
          "$ref": "file://quantitativevalue.json"
        },
        "ineligibleRegion": {
          "anyOf": [
            {
              "$ref": "file://geoshape.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\n      <br><br> See also <a href=\"/eligibleRegion\">eligibleRegion</a>.\n      "
        },
        "availabilityStarts": {
          "description": "The beginning of the availability of the product or service included in the offer.",
          "type": "string"
        },
        "review": {
          "description": "A review of the item.",
          "$ref": "file://review.json"
        },
        "validThrough": {
          "description": "The end of the validity of offer, price specification, or opening hours data.",
          "type": "string"
        },
        "eligibleRegion": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://geoshape.json"
            }
          ],
          "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\n      <br><br> See also <a href=\"/ineligibleRegion\">ineligibleRegion</a>.\n    "
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "priceCurrency": {
          "description": "The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to PriceSpecification and its subtypes.",
          "type": "string"
        },
        "serialNumber": {
          "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "duns": {
      "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
      "type": "string"
    },
    "potentialAction": {
      "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.\n      <br/><br/>See also <a href=\"http://blog.schema.org/2014/04/announcing-schemaorg-actions.html\">blog post</a>\n      and <a href=\"http://schema.org/docs/actions.html\">Actions overview document</a>.",
      "version": "2.2",
      "title": "Action",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "actionStatus": {
          "description": "Indicates the current disposition of the Action.",
          "$ref": "file://actionstatustype.json"
        },
        "participant": {
          "anyOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with *Steve*."
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "startTime": {
          "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from *January* to December.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
          "type": "string"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "error": {
          "description": "For failed actions, more information on the cause of the failure.",
          "$ref": "file://thing.json"
        },
        "agent": {
          "anyOf": [
            {
              "$ref": "file://person.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "The direct performer or driver of the action (animate or inanimate). e.g. *John* wrote a book."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "object": {
          "description": "The object upon the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read *a book*.",
          "$ref": "file://thing.json"
        },
        "result": {
          "description": "The result produced in the action. e.g. John wrote *a book*.",
          "$ref": "file://thing.json"
        },
        "target": {
          "description": "Indicates a target EntryPoint for an Action.",
          "$ref": "file://entrypoint.json"
        },
        "instrument": {
          "description": "The object that helped the agent perform the action. e.g. John wrote a book with *a pen*.",
          "$ref": "file://thing.json"
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "location": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            },
            {
              "$ref": "file://place.json"
            }
          ],
          "description": "The location of for example where the event is happening, an organization is located, or where an action takes place."
        },
        "endTime": {
          "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to *December*.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "award": {
      "description": "An award won by or for this item.",
      "type": "string"
    },
    "name": {
      "description": "The name of the item.",
      "type": "string"
    },
    "children": {
      "description": "A person (alive, dead, undead, or fictional).",
      "version": "2.2",
      "title": "Person",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "owns": {
          "anyOf": [
            {
              "$ref": "file://ownershipinfo.json"
            },
            {
              "$ref": "file://product.json"
            }
          ],
          "description": "Products owned by the organization or person."
        },
        "follows": {
          "description": "The most generic uni-directional social relation.",
          "$ref": "file://person.json"
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
          "type": "string"
        },
        "homeLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's residence."
        },
        "nationality": {
          "description": "Nationality of the person.",
          "$ref": "file://country.json"
        },
        "givenName": {
          "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
          "type": "string"
        },
        "globalLocationNumber": {
          "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
          "type": "string"
        },
        "parents": {
          "description": "A parents of the person.",
          "$ref": "file://person.json"
        },
        "alternateName": {
          "description": "An alias for the item.",
          "type": "string"
        },
        "netWorth": {
          "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
          "$ref": "file://pricespecification.json"
        },
        "contactPoints": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "memberOf": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://programmembership.json"
            }
          ],
          "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs."
        },
        "hasPOS": {
          "description": "Points-of-Sales operated by the organization or person.",
          "$ref": "file://place.json"
        },
        "jobTitle": {
          "description": "The job title of the person (for example, Financial Manager).",
          "type": "string"
        },
        "birthPlace": {
          "description": "The place where the person was born.",
          "$ref": "file://place.json"
        },
        "contactPoint": {
          "description": "A contact point for a person or organization.",
          "$ref": "file://contactpoint.json"
        },
        "brand": {
          "anyOf": [
            {
              "$ref": "file://organization.json"
            },
            {
              "$ref": "file://brand.json"
            }
          ],
          "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person."
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "deathPlace": {
          "description": "The place where the person died.",
          "$ref": "file://place.json"
        },
        "honorificPrefix": {
          "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
          "type": "string"
        },
        "isicV4": {
          "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
          "type": "string"
        },
        "affiliation": {
          "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
          "$ref": "file://organization.json"
        },
        "siblings": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "deathDate": {
          "description": "Date of death.",
          "type": "string"
        },
        "weight": {
          "description": "The weight of the product or person.",
          "$ref": "file://quantitativevalue.json"
        },
        "birthDate": {
          "description": "Date of birth.",
          "type": "string"
        },
        "colleagues": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "colleague": {
          "description": "A colleague of the person.",
          "$ref": "file://person.json"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "file://postaladdress.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "Physical address of the item."
        },
        "sibling": {
          "description": "A sibling of the person.",
          "$ref": "file://person.json"
        },
        "performerIn": {
          "description": "Event that this person is a performer or participant in.",
          "$ref": "file://event.json"
        },
        "knows": {
          "description": "The most generic bi-directional social/work relation.",
          "$ref": "file://person.json"
        },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "type": "string"
        },
        "relatedTo": {
          "description": "The most generic familial relation.",
          "$ref": "file://person.json"
        },
        "url": {
          "description": "URL of the item.",
          "type": "string"
        },
        "seeks": {
          "description": "A pointer to products or services sought by the organization or person (demand).",
          "$ref": "file://demand.json"
        },
        "height": {
          "anyOf": [
            {
              "$ref": "file://quantitativevalue.json"
            },
            {
              "$ref": "file://distance.json"
            }
          ],
          "description": "The height of the item."
        },
        "mainEntityOfPage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "file://creativework.json"
            }
          ],
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.\n      <br /><br />\n      See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.\n      "
        },
        "description": {
          "description": "A short description of the item.",
          "type": "string"
        },
        "worksFor": {
          "description": "Organizations that the person works for.",
          "$ref": "file://organization.json"
        },
        "alumniOf": {
          "anyOf": [
            {
              "$ref": "file://educationalorganization.json"
            },
            {
              "$ref": "file://organization.json"
            }
          ],
          "description": "An organization that the person is an alumni of."
        },
        "parent": {
          "description": "A parent of this person.",
          "$ref": "file://person.json"
        },
        "hasOfferCatalog": {
          "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
          "$ref": "file://offercatalog.json"
        },
        "duns": {
          "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "type": "string"
        },
        "honorificSuffix": {
          "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
          "type": "string"
        },
        "workLocation": {
          "anyOf": [
            {
              "$ref": "file://place.json"
            },
            {
              "$ref": "file://contactpoint.json"
            }
          ],
          "description": "A contact location for a person's place of work."
        },
        "name": {
          "description": "The name of the item.",
          "type": "string"
        },
        "gender": {
          "description": "Gender of the person.",
          "type": "string"
        },
        "naics": {
          "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
          "type": "string"
        },
        "taxID": {
          "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
          "type": "string"
        },
        "spouse": {
          "description": "The person's spouse.",
          "$ref": "file://person.json"
        },
        "vatID": {
          "description": "The Value-added Tax ID of the organization or person.",
          "type": "string"
        },
        "telephone": {
          "description": "The telephone number.",
          "type": "string"
        },
        "makesOffer": {
          "description": "A pointer to products or services offered by the organization or person.",
          "$ref": "file://offer.json"
        },
        "image": {
          "anyOf": [
            {
              "$ref": "file://imageobject.json"
            },
            {
              "type": "string"
            }
          ],
          "description": "An image of the item. This can be a <a href=\"http://schema.org/URL\">URL</a> or a fully described <a href=\"http://schema.org/ImageObject\">ImageObject</a>."
        },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "$ref": "file://action.json"
        },
        "award": {
          "description": "An award won by or for this item.",
          "type": "string"
        },
        "awards": {
          "description": "Awards won by or for this item.",
          "type": "string"
        },
        "children": {
          "description": "A child of the person.",
          "$ref": "file://person.json"
        },
        "additionalName": {
          "description": "An additional name for a Person, can be used for a middle name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "honorificSuffix": {
      "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
      "type": "string"
    }
  },
  "type": "object"
}